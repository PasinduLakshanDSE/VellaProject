{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\AssetManagmentSystem\\\\assetmanagment\\\\src\\\\components\\\\Admin\\\\AssetRegistration\\\\AssetRegister.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { QRCode } from \"react-qrcode-logo\";\nimport html2canvas from \"html2canvas\";\nimport \"./assetRegister.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssetRegister = () => {\n  _s();\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\n  const [name, setName] = useState((user === null || user === void 0 ? void 0 : user.username) || \"\");\n  const [company, setCompany] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [furnitureItems, setFurnitureItems] = useState([]);\n  const [assetName, setAssetName] = useState(\"\");\n  const [assetUpdateDate, setAssetUpdateDate] = useState(\"\");\n  const [serialNumber, setSerialNumber] = useState(\"\");\n  const [qrCodeData, setQrCodeData] = useState(null);\n  const [trackingId, setTrackingId] = useState(\"\");\n  const qrCodeContainerRef = useRef();\n  const mainCategory = [\"Electrical items\", \"Electronic items\", \"Laundry & Linen\", \"Housekeeping Supplies\", \"Security & Safety\", \"Furniture\", \"Outdoor & Garden Equipment \"];\n  const companies = [\"Vella\", \"98 Acers\", \"Ravana Pool Club\", \"Flying Ravana\", \"Le Maas Tota\", \"Tea Factory\"];\n  const departments = [\"IT\", \"HR\", \"Kitchen\", \"Front Office\"];\n  const companyAbbreviations = {\n    \"Vella\": \"V\",\n    \"98 Acers\": \"98\",\n    \"Ravana Pool Club\": \"RPC\",\n    \"Flying Ravana\": \"FR\",\n    \"Le Maas Tota\": \"LMT\",\n    \"Tea Factory\": \"TF\"\n  };\n  const departmentAbbreviations = {\n    \"IT\": \"IT\",\n    \"HR\": \"HR\",\n    \"Kitchen\": \"KT\",\n    \"Front Office\": \"FO\"\n  };\n  useEffect(() => {\n    fetchCategory();\n  }, []);\n  const fetchCategory = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/api/categories/getCategory\");\n      setCategories(response.data);\n    } catch (error) {\n      console.error(\"Error fetching categories:\", error);\n    }\n  };\n  const generateTrackingId = () => {\n    const companyAbbr = companyAbbreviations[company] || company;\n    const departmentAbbr = departmentAbbreviations[department] || department;\n    const randomNum = String(Math.floor(Math.random() * 100000)).padStart(5, \"0\");\n    if (serialNumber) {\n      const serialSuffix = serialNumber.slice(-4).padStart(4, \"0\");\n      return `${companyAbbr}-${departmentAbbr}-${serialSuffix}`;\n    }\n    return `${companyAbbr}-${departmentAbbr}-${randomNum}`;\n  };\n  const handleSubmit = () => {\n    if (!name || !company || !department || !mainCategory || !assetName || !assetUpdateDate || !type) {\n      alert(\"Please fill in all fields before submitting.\");\n      return;\n    }\n    if (mainCategory === \"Electronics\" && !serialNumber) {\n      alert(\"Please enter a Serial Number for Electronics.\");\n      return;\n    }\n    if (!trackingId || !qrCodeData) {\n      alert(\"Please generate a Tracking ID and QR Code before submitting.\");\n      return;\n    }\n    const assetData = {\n      name,\n      company,\n      department,\n      category,\n      type,\n      assetName,\n      assetUpdateDate,\n      serialNumber: category === \"Electronics\" ? serialNumber : null,\n      trackingId\n    };\n    console.log(\"Asset Data: \", assetData);\n    alert(\"Asset Registered Successfully!\");\n    setCompany(\"\");\n    setDepartment(\"\");\n    setCategory(\"\");\n    setType(\"\");\n    setAssetName(\"\");\n    setAssetUpdateDate(\"\");\n    setSerialNumber(\"\");\n    setQrCodeData(null);\n    setTrackingId(\"\");\n  };\n  const handleGenerateQR = () => {\n    if (!name || !company || !department || !category || !assetName || !assetUpdateDate || !type) {\n      alert(\"Please fill in all fields before generating the QR code.\");\n      return;\n    }\n    if (category === \"Electronics\" && !serialNumber) {\n      alert(\"Please enter a Serial Number for Electronics.\");\n      return;\n    }\n    const uniqueTrackingId = trackingId || generateTrackingId();\n    setTrackingId(uniqueTrackingId);\n    const qrData = JSON.stringify({\n      name,\n      company,\n      department,\n      category,\n      assetName,\n      type,\n      assetUpdateDate,\n      serialNumber: category === \"Electronics\" ? serialNumber : null,\n      trackingId: uniqueTrackingId\n    });\n    setQrCodeData(qrData);\n  };\n  const handleDownloadCombinedImage = async () => {\n    try {\n      if (!qrCodeContainerRef.current) return;\n      const canvas = await html2canvas(qrCodeContainerRef.current);\n      const link = document.createElement(\"a\");\n      link.download = \"QRCodeWithTrackingID.png\";\n      link.href = canvas.toDataURL(\"image/png\");\n      link.click();\n    } catch (error) {\n      console.error(\"Failed to download the QR code image:\", error);\n      alert(\"Error occurred while downloading the QR code. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"asset-register\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Asset Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Enter your Name\",\n          readOnly: Boolean(user)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: company,\n          onChange: e => setCompany(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), companies.map(com => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: com,\n            children: com\n          }, com, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: department,\n          onChange: e => setDepartment(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), departments.map(dep => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: dep,\n            children: dep\n          }, dep, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat.category,\n            children: cat.category\n          }, cat._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), category && /*#__PURE__*/_jsxDEV(\"select\", {\n          value: type,\n          onChange: e => setType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), types.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: t.types,\n            children: t.types\n          }, t._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: assetName,\n          onChange: e => setAssetName(e.target.value),\n          placeholder: \"Enter Asset Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), category === \"Electronics\" && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: serialNumber,\n          onChange: e => setSerialNumber(e.target.value),\n          placeholder: \"Enter Serial Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), category === \"Furniture\" && /*#__PURE__*/_jsxDEV(\"select\", {\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Furniture Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), furnitureItems.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.name,\n            children: item.name\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: assetUpdateDate,\n          onChange: e => setAssetUpdateDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button generate-btn\",\n            onClick: handleGenerateQR,\n            children: \"Generate QR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), qrCodeData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"qr-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Generated QR Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: qrCodeContainerRef,\n          className: \"combined-qr-container\",\n          children: [/*#__PURE__*/_jsxDEV(QRCode, {\n            value: qrCodeData,\n            size: 150,\n            qrStyle: \"squares\",\n            logoImage: \"https://via.placeholder.com/30\",\n            logoWidth: 40\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"ID: \", trackingId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button download-btn\",\n          onClick: handleDownloadCombinedImage,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(AssetRegister, \"I7Po9D6F59oBJAWMI9WRfmL4xfM=\");\n_c = AssetRegister;\nexport default AssetRegister;\nvar _c;\n$RefreshReg$(_c, \"AssetRegister\");","map":{"version":3,"names":["React","useState","useRef","useEffect","QRCode","html2canvas","axios","jsxDEV","_jsxDEV","AssetRegister","_s","user","JSON","parse","localStorage","getItem","name","setName","username","company","setCompany","department","setDepartment","category","setCategory","type","setType","categories","setCategories","types","setTypes","furnitureItems","setFurnitureItems","assetName","setAssetName","assetUpdateDate","setAssetUpdateDate","serialNumber","setSerialNumber","qrCodeData","setQrCodeData","trackingId","setTrackingId","qrCodeContainerRef","mainCategory","companies","departments","companyAbbreviations","departmentAbbreviations","fetchCategory","response","get","data","error","console","generateTrackingId","companyAbbr","departmentAbbr","randomNum","String","Math","floor","random","padStart","serialSuffix","slice","handleSubmit","alert","assetData","log","handleGenerateQR","uniqueTrackingId","qrData","stringify","handleDownloadCombinedImage","current","canvas","link","document","createElement","download","href","toDataURL","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","readOnly","Boolean","map","com","dep","cat","_id","t","item","onClick","ref","size","qrStyle","logoImage","logoWidth","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/AssetManagmentSystem/assetmanagment/src/components/Admin/AssetRegistration/AssetRegister.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { QRCode } from \"react-qrcode-logo\";\r\nimport html2canvas from \"html2canvas\";\r\nimport \"./assetRegister.css\";\r\nimport axios from \"axios\";\r\n\r\nconst AssetRegister = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const [name, setName] = useState(user?.username || \"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [types, setTypes] = useState([]);\r\n  const [furnitureItems, setFurnitureItems] = useState([]);\r\n  const [assetName, setAssetName] = useState(\"\");\r\n  const [assetUpdateDate, setAssetUpdateDate] = useState(\"\");\r\n  const [serialNumber, setSerialNumber] = useState(\"\");\r\n  const [qrCodeData, setQrCodeData] = useState(null);\r\n  const [trackingId, setTrackingId] = useState(\"\");\r\n\r\n  const qrCodeContainerRef = useRef();\r\nconst mainCategory= [\"Electrical items\",\"Electronic items\",\"Laundry & Linen\",\"Housekeeping Supplies\",\"Security & Safety\",\"Furniture\",\"Outdoor & Garden Equipment \",]\r\n  const companies = [\"Vella\", \"98 Acers\", \"Ravana Pool Club\", \"Flying Ravana\", \"Le Maas Tota\", \"Tea Factory\"];\r\n  const departments = [\"IT\", \"HR\", \"Kitchen\", \"Front Office\"];\r\n\r\n  const companyAbbreviations = {\r\n    \"Vella\": \"V\",\r\n    \"98 Acers\": \"98\",\r\n    \"Ravana Pool Club\": \"RPC\",\r\n    \"Flying Ravana\": \"FR\",\r\n    \"Le Maas Tota\": \"LMT\",\r\n    \"Tea Factory\": \"TF\",\r\n  };\r\n\r\n  const departmentAbbreviations = {\r\n    \"IT\": \"IT\",\r\n    \"HR\": \"HR\",\r\n    \"Kitchen\": \"KT\",\r\n    \"Front Office\": \"FO\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCategory();\r\n  }, []);\r\n\r\n  \r\n\r\n  const fetchCategory = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8000/api/categories/getCategory\");\r\n      setCategories(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching categories:\", error);\r\n    }\r\n  };\r\n\r\n \r\n\r\n \r\n\r\n  const generateTrackingId = () => {\r\n    const companyAbbr = companyAbbreviations[company] || company;\r\n    const departmentAbbr = departmentAbbreviations[department] || department;\r\n    const randomNum = String(Math.floor(Math.random() * 100000)).padStart(5, \"0\");\r\n\r\n    if (serialNumber) {\r\n      const serialSuffix = serialNumber.slice(-4).padStart(4, \"0\");\r\n      return `${companyAbbr}-${departmentAbbr}-${serialSuffix}`;\r\n    }\r\n\r\n    return `${companyAbbr}-${departmentAbbr}-${randomNum}`;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!name || !company || !department || !mainCategory || !assetName || !assetUpdateDate || !type) {\r\n      alert(\"Please fill in all fields before submitting.\");\r\n      return;\r\n    }\r\n\r\n    if (mainCategory === \"Electronics\" && !serialNumber) {\r\n      alert(\"Please enter a Serial Number for Electronics.\");\r\n      return;\r\n    }\r\n\r\n    if (!trackingId || !qrCodeData) {\r\n      alert(\"Please generate a Tracking ID and QR Code before submitting.\");\r\n      return;\r\n    }\r\n\r\n    const assetData = {\r\n      name,\r\n      company,\r\n      department,\r\n      category,\r\n      type,\r\n      assetName,\r\n      assetUpdateDate,\r\n      serialNumber: category === \"Electronics\" ? serialNumber : null,\r\n      trackingId,\r\n    };\r\n\r\n    console.log(\"Asset Data: \", assetData);\r\n    alert(\"Asset Registered Successfully!\");\r\n\r\n    setCompany(\"\");\r\n    setDepartment(\"\");\r\n    setCategory(\"\");\r\n    setType(\"\");\r\n    setAssetName(\"\");\r\n    setAssetUpdateDate(\"\");\r\n    setSerialNumber(\"\");\r\n    setQrCodeData(null);\r\n    setTrackingId(\"\");\r\n  };\r\n\r\n  const handleGenerateQR = () => {\r\n    if (!name || !company || !department || !category || !assetName || !assetUpdateDate || !type) {\r\n      alert(\"Please fill in all fields before generating the QR code.\");\r\n      return;\r\n    }\r\n\r\n    if (category === \"Electronics\" && !serialNumber) {\r\n      alert(\"Please enter a Serial Number for Electronics.\");\r\n      return;\r\n    }\r\n\r\n    const uniqueTrackingId = trackingId || generateTrackingId();\r\n    setTrackingId(uniqueTrackingId);\r\n\r\n    const qrData = JSON.stringify({\r\n      name,\r\n      company,\r\n      department,\r\n      category,\r\n      assetName,\r\n      type,\r\n      assetUpdateDate,\r\n      serialNumber: category === \"Electronics\" ? serialNumber : null,\r\n      trackingId: uniqueTrackingId,\r\n    });\r\n\r\n    setQrCodeData(qrData);\r\n  };\r\n\r\n  const handleDownloadCombinedImage = async () => {\r\n    try {\r\n      if (!qrCodeContainerRef.current) return;\r\n\r\n      const canvas = await html2canvas(qrCodeContainerRef.current);\r\n      const link = document.createElement(\"a\");\r\n      link.download = \"QRCodeWithTrackingID.png\";\r\n      link.href = canvas.toDataURL(\"image/png\");\r\n      link.click();\r\n    } catch (error) {\r\n      console.error(\"Failed to download the QR code image:\", error);\r\n      alert(\"Error occurred while downloading the QR code. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"asset-register\">\r\n      <div className=\"form-container\">\r\n        <h2>Asset Registration</h2>\r\n        <div className=\"input-box\">\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            placeholder=\"Enter your Name\"\r\n            readOnly={Boolean(user)}\r\n          />\r\n          <select value={company} onChange={(e) => setCompany(e.target.value)}>\r\n            <option value=\"\">Select Company</option>\r\n            {companies.map((com) => (\r\n              <option key={com} value={com}>{com}</option>\r\n            ))}\r\n          </select>\r\n\r\n          <select value={department} onChange={(e) => setDepartment(e.target.value)}>\r\n            <option value=\"\">Select Department</option>\r\n            {departments.map((dep) => (\r\n              <option key={dep} value={dep}>{dep}</option>\r\n            ))}\r\n          </select>\r\n\r\n          <select value={category} onChange={(e) => setCategory(e.target.value)}>\r\n            <option value=\"\">Select Category</option>\r\n            {categories.map((cat) => (\r\n              <option key={cat._id} value={cat.category}>{cat.category}</option>\r\n            ))}\r\n          </select>\r\n\r\n          {category && (\r\n            <select value={type} onChange={(e) => setType(e.target.value)}>\r\n              <option value=\"\">Select Type</option>\r\n              {types.map((t) => (\r\n                <option key={t._id} value={t.types}>{t.types}</option>\r\n              ))}\r\n            </select>\r\n          )}\r\n\r\n          <input\r\n            type=\"text\"\r\n            value={assetName}\r\n            onChange={(e) => setAssetName(e.target.value)}\r\n            placeholder=\"Enter Asset Name\"\r\n          />\r\n\r\n          {category === \"Electronics\" && (\r\n            <input\r\n              type=\"text\"\r\n              value={serialNumber}\r\n              onChange={(e) => setSerialNumber(e.target.value)}\r\n              placeholder=\"Enter Serial Number\"\r\n            />\r\n          )}\r\n\r\n          {category === \"Furniture\" && (\r\n            <select>\r\n              <option value=\"\">Select Furniture Item</option>\r\n              {furnitureItems.map((item) => (\r\n                <option key={item._id} value={item.name}>{item.name}</option>\r\n              ))}\r\n            </select>\r\n          )}\r\n\r\n          <input\r\n            type=\"date\"\r\n            value={assetUpdateDate}\r\n            onChange={(e) => setAssetUpdateDate(e.target.value)}\r\n          />\r\n\r\n          <div className=\"button-group\">\r\n            <button className=\"button\" onClick={handleSubmit}>Submit</button>\r\n            <button className=\"button generate-btn\" onClick={handleGenerateQR}>Generate QR</button>\r\n          </div>\r\n        </div>\r\n\r\n        {qrCodeData && (\r\n          <div className=\"qr-container\">\r\n            <h3>Generated QR Code</h3>\r\n            <div ref={qrCodeContainerRef} className=\"combined-qr-container\">\r\n              <QRCode\r\n                value={qrCodeData}\r\n                size={150}\r\n                qrStyle=\"squares\"\r\n                logoImage=\"https://via.placeholder.com/30\"\r\n                logoWidth={40}\r\n              />\r\n              <p>ID: {trackingId}</p>\r\n            </div>\r\n            <button className=\"button download-btn\" onClick={handleDownloadCombinedImage}>Download</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssetRegister;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}