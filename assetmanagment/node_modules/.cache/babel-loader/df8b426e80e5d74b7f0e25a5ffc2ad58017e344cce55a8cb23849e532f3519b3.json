{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\AssetManagmentSystemVella\\\\assetmanagment\\\\src\\\\components\\\\Admin\\\\AssetRegistration\\\\AssetRegister.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { QRCode } from \"react-qrcode-logo\";\nimport html2canvas from \"html2canvas\";\nimport \"./assetRegister.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssetRegister = () => {\n  _s();\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\n  const [name, setName] = useState((user === null || user === void 0 ? void 0 : user.username) || \"\");\n  const [company, setCompany] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n  const [mainCategory, setMainCategory] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [assetUpdateDate, setAssetUpdateDate] = useState(\"\");\n  const [specialNote, setSpecialNote] = useState(\"\");\n  const [customType, setCustomType] = useState(\"\");\n  const [computerComponents, setComputerComponents] = useState({});\n  const [trackingIds, setTrackingIds] = useState({});\n  const [qrCodes, setQrCodes] = useState({});\n  const qrCodeContainerRef = useRef();\n  const mainCategories = [\"Electronic items\", \"Laundry & Linen\", \"Housekeeping Supplies\", \"Electrical items\", \"Security & Safety\", \"Furniture\", \"Outdoor & Garden Equipment\", \"Stationery\"];\n  const companies = [\"Vella\", \"98 Acers\", \"Ravana Pool Club\", \"Flying Ravana\", \"Le Maas Tota\", \"Tea Factory\"];\n  const departments = [\"IT\", \"HR\", \"Kitchen\", \"Front Office\", \"Store\", \"Account\", \"Audit\"];\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  useEffect(() => {\n    if (mainCategory) filterTypes();else setTypes([]);\n  }, [mainCategory, categories]);\n  const fetchCategories = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/api/categories/getCategory\");\n      setCategories(response.data);\n    } catch (error) {\n      console.error(\"Error fetching categories:\", error);\n    }\n  };\n  const filterTypes = () => {\n    const filtered = categories.filter(category => category.category === mainCategory).map(category => category.types).flat();\n    setTypes(filtered);\n  };\n  const generateTrackingId = () => {\n    const companyCodes = {\n      Vella: \"VE\",\n      \"98 Acers\": \"98\",\n      \"Ravana Pool Club\": \"RPC\",\n      \"Flying Ravana\": \"FR\",\n      \"Le Maas Tota\": \"LMT\",\n      \"Tea Factory\": \"TF\"\n    };\n    const departmentCodes = {\n      IT: \"IT\",\n      HR: \"HR\",\n      Kitchen: \"KT\",\n      Store: \"ST\",\n      \"Front Office\": \"FO\",\n      Account: \"AC\",\n      Audit: \"AU\"\n    };\n    const companyCode = companyCodes[company] || \"XX\";\n    const departmentCode = departmentCodes[department] || \"XX\";\n    const randomNum = `${new Date().toISOString().slice(2, 10).replace(/-/g, \"\")}${String(Math.floor(Math.random() * 100)).padStart(2, \"0\")}`;\n    return `${companyCode}-${departmentCode}-${randomNum}`;\n  };\n  const handleComponentChange = e => {\n    const value = e.target.value;\n    if (value === \"fullSet\") {\n      setComputerComponents({\n        cpu: {\n          name: \"\",\n          serial: \"\"\n        },\n        monitor: {\n          name: \"\",\n          serial: \"\"\n        },\n        mouse: {\n          name: \"\",\n          serial: \"\"\n        },\n        keyboard: {\n          name: \"\",\n          serial: \"\"\n        }\n      });\n    } else {\n      setComputerComponents(value);\n    }\n  };\n  const handleGenerateQR = () => {\n    if (!name || !company || !department || !mainCategory || !assetUpdateDate || !type) {\n      alert(\"Please fill in all fields before generating the QR code.\");\n      return;\n    }\n    if (typeof computerComponents === \"object\") {\n      // If full set, generate separate QR codes\n      const newTrackingIds = {};\n      const newQrCodes = {};\n      for (const key in computerComponents) {\n        if (!computerComponents[key].name || !computerComponents[key].serial) {\n          alert(`Please enter Name and Serial Number for ${key.toUpperCase()}`);\n          return;\n        }\n        const id = generateTrackingId();\n        newTrackingIds[key] = id;\n        newQrCodes[key] = JSON.stringify({\n          name,\n          company,\n          department,\n          mainCategory,\n          type: type === \"Other\" ? customType : type,\n          assetUpdateDate,\n          assetName: computerComponents[key].name,\n          serialNumber: computerComponents[key].serial,\n          trackingId: id,\n          specialNote\n        });\n      }\n      setTrackingIds(prev => ({\n        ...prev,\n        ...newTrackingIds\n      }));\n      setQrCodes(prev => ({\n        ...prev,\n        ...newQrCodes\n      }));\n    } else {\n      const id = generateTrackingId();\n      setTrackingIds({\n        single: id\n      });\n      setQrCodes({\n        single: JSON.stringify({\n          name,\n          company,\n          department,\n          mainCategory,\n          type: type === \"Other\" ? customType : type,\n          assetUpdateDate,\n          serialNumber: mainCategory === \"Electronic items\" ? specialNote : null,\n          trackingId: id,\n          specialNote\n        })\n      });\n    }\n  };\n  const handleDownloadCombinedImage = async () => {\n    try {\n      if (!qrCodeContainerRef.current) return;\n      const canvas = await html2canvas(qrCodeContainerRef.current);\n      const link = document.createElement(\"a\");\n      link.download = \"QRCodeWithTrackingID.png\";\n      link.href = canvas.toDataURL(\"image/png\");\n      link.click();\n    } catch (error) {\n      console.error(\"Failed to download the QR code image:\", error);\n      alert(\"Error occurred while downloading the QR code. Please try again.\");\n    }\n  };\n  const handleSubmit = async () => {\n    if (!name || !company || !department || !mainCategory || !assetUpdateDate || !type) {\n      alert(\"Please fill in all fields before submitting.\");\n      return;\n    }\n    try {\n      const assetData = {\n        name,\n        company,\n        department,\n        mainCategory,\n        type: type === \"Other\" ? customType : type,\n        assetName: computerComponents && typeof computerComponents === \"object\" ? computerComponents : assetName,\n        assetUpdateDate,\n        serialNumber: mainCategory === \"Electronic items\" ? specialNote : null,\n        trackingId: trackingIds.single || trackingIds.monitor,\n        specialNote,\n        computerComponents\n      };\n      const response = await axios.post(\"http://localhost:8000/api/AssetRegisterDetails\", assetData);\n      alert(response.data.message);\n      // Reset form\n      setCompany(\"\");\n      setDepartment(\"\");\n      setMainCategory(\"\");\n      setType(\"\");\n      setAssetUpdateDate(\"\");\n      setSpecialNote(\"\");\n      setTrackingIds({});\n      setQrCodes({});\n      setComputerComponents({});\n      setCustomType(\"\");\n    } catch (error) {\n      console.error(\"Error submitting data:\", error);\n      alert(\"Error creating asset. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"asset-register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Asset Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        placeholder: \"Enter your Name\",\n        readOnly: Boolean(user)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: company,\n        onChange: e => setCompany(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), companies.map(com => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: com,\n          children: com\n        }, com, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: department,\n        onChange: e => setDepartment(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), departments.map(dep => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: dep,\n          children: dep\n        }, dep, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: mainCategory,\n        onChange: e => setMainCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), mainCategories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cat,\n          children: cat\n        }, cat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), mainCategory && /*#__PURE__*/_jsxDEV(\"select\", {\n        value: type,\n        onChange: e => setType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), types.map((t, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: t,\n          children: t\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Other\",\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), type === \"Other\" && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: customType,\n        onChange: e => setCustomType(e.target.value),\n        placeholder: \"Enter Custom Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), type === \"Computer\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"computerComponent\",\n            value: \"fullSet\",\n            onChange: handleComponentChange,\n            checked: computerComponents === \"fullSet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), \" Full Set\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), computerComponents === \"fullSet\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"cpu\", \"monitor\", \"mouse\", \"keyboard\"].map(comp => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: `${comp.toUpperCase()} Name`,\n              onChange: e => setComputerComponents(prev => ({\n                ...prev,\n                [comp]: {\n                  ...(prev === null || prev === void 0 ? void 0 : prev[comp]),\n                  name: e.target.value\n                }\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: `${comp.toUpperCase()} Serial`,\n              onChange: e => setComputerComponents(prev => ({\n                ...prev,\n                [comp]: {\n                  ...(prev === null || prev === void 0 ? void 0 : prev[comp]),\n                  serial: e.target.value\n                }\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 21\n            }, this)]\n          }, comp, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: assetUpdateDate,\n        onChange: e => setAssetUpdateDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: specialNote,\n        onChange: e => setSpecialNote(e.target.value),\n        placeholder: \"Special Note (Optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateQR,\n        children: \"Generate QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadCombinedImage,\n        children: \"Download QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: qrCodeContainerRef,\n      children: Object.keys(qrCodes).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(QRCode, {\n          value: qrCodes[key],\n          size: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tracking ID: \", trackingIds[key]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(AssetRegister, \"Fpcd+oFbjuHs6kR263LNPZjwydg=\");\n_c = AssetRegister;\nexport default AssetRegister;\nvar _c;\n$RefreshReg$(_c, \"AssetRegister\");","map":{"version":3,"names":["React","useState","useRef","useEffect","QRCode","html2canvas","axios","jsxDEV","_jsxDEV","AssetRegister","_s","user","JSON","parse","localStorage","getItem","name","setName","username","company","setCompany","department","setDepartment","mainCategory","setMainCategory","type","setType","categories","setCategories","types","setTypes","assetUpdateDate","setAssetUpdateDate","specialNote","setSpecialNote","customType","setCustomType","computerComponents","setComputerComponents","trackingIds","setTrackingIds","qrCodes","setQrCodes","qrCodeContainerRef","mainCategories","companies","departments","fetchCategories","filterTypes","response","get","data","error","console","filtered","filter","category","map","flat","generateTrackingId","companyCodes","Vella","departmentCodes","IT","HR","Kitchen","Store","Account","Audit","companyCode","departmentCode","randomNum","Date","toISOString","slice","replace","String","Math","floor","random","padStart","handleComponentChange","e","value","target","cpu","serial","monitor","mouse","keyboard","handleGenerateQR","alert","newTrackingIds","newQrCodes","key","toUpperCase","id","stringify","assetName","serialNumber","trackingId","prev","single","handleDownloadCombinedImage","current","canvas","link","document","createElement","download","href","toDataURL","click","handleSubmit","assetData","post","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","readOnly","Boolean","com","dep","cat","t","index","checked","comp","onClick","ref","Object","keys","size","_c","$RefreshReg$"],"sources":["C:/projects/AssetManagmentSystemVella/assetmanagment/src/components/Admin/AssetRegistration/AssetRegister.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { QRCode } from \"react-qrcode-logo\";\r\nimport html2canvas from \"html2canvas\";\r\nimport \"./assetRegister.css\";\r\nimport axios from \"axios\";\r\n\r\nconst AssetRegister = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const [name, setName] = useState(user?.username || \"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [mainCategory, setMainCategory] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [types, setTypes] = useState([]);\r\n  const [assetUpdateDate, setAssetUpdateDate] = useState(\"\");\r\n  const [specialNote, setSpecialNote] = useState(\"\");\r\n  const [customType, setCustomType] = useState(\"\");\r\n  const [computerComponents, setComputerComponents] = useState({});\r\n  const [trackingIds, setTrackingIds] = useState({});\r\n  const [qrCodes, setQrCodes] = useState({});\r\n  const qrCodeContainerRef = useRef();\r\n\r\n  const mainCategories = [\r\n    \"Electronic items\",\r\n    \"Laundry & Linen\",\r\n    \"Housekeeping Supplies\",\r\n    \"Electrical items\",\r\n    \"Security & Safety\",\r\n    \"Furniture\",\r\n    \"Outdoor & Garden Equipment\",\r\n    \"Stationery\",\r\n  ];\r\n\r\n  const companies = [\"Vella\", \"98 Acers\", \"Ravana Pool Club\", \"Flying Ravana\", \"Le Maas Tota\", \"Tea Factory\"];\r\n  const departments = [\"IT\", \"HR\", \"Kitchen\", \"Front Office\", \"Store\", \"Account\", \"Audit\"];\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (mainCategory) filterTypes();\r\n    else setTypes([]);\r\n  }, [mainCategory, categories]);\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8000/api/categories/getCategory\");\r\n      setCategories(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching categories:\", error);\r\n    }\r\n  };\r\n\r\n  const filterTypes = () => {\r\n    const filtered = categories\r\n      .filter((category) => category.category === mainCategory)\r\n      .map((category) => category.types)\r\n      .flat();\r\n    setTypes(filtered);\r\n  };\r\n\r\n  const generateTrackingId = () => {\r\n    const companyCodes = { Vella: \"VE\", \"98 Acers\": \"98\", \"Ravana Pool Club\": \"RPC\", \"Flying Ravana\": \"FR\", \"Le Maas Tota\": \"LMT\", \"Tea Factory\": \"TF\" };\r\n    const departmentCodes = { IT: \"IT\", HR: \"HR\", Kitchen: \"KT\", Store: \"ST\", \"Front Office\": \"FO\", Account: \"AC\", Audit: \"AU\" };\r\n    const companyCode = companyCodes[company] || \"XX\";\r\n    const departmentCode = departmentCodes[department] || \"XX\";\r\n    const randomNum = `${new Date().toISOString().slice(2, 10).replace(/-/g, \"\")}${String(Math.floor(Math.random() * 100)).padStart(2, \"0\")}`;\r\n    return `${companyCode}-${departmentCode}-${randomNum}`;\r\n  };\r\n\r\n  const handleComponentChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value === \"fullSet\") {\r\n      setComputerComponents({\r\n        cpu: { name: \"\", serial: \"\" },\r\n        monitor: { name: \"\", serial: \"\" },\r\n        mouse: { name: \"\", serial: \"\" },\r\n        keyboard: { name: \"\", serial: \"\" }\r\n      });\r\n    } else {\r\n      setComputerComponents(value);\r\n    }\r\n  };\r\n\r\n  const handleGenerateQR = () => {\r\n    if (!name || !company || !department || !mainCategory || !assetUpdateDate || !type) {\r\n      alert(\"Please fill in all fields before generating the QR code.\");\r\n      return;\r\n    }\r\n\r\n    if (typeof computerComponents === \"object\") {\r\n      // If full set, generate separate QR codes\r\n      const newTrackingIds = {};\r\n      const newQrCodes = {};\r\n\r\n      for (const key in computerComponents) {\r\n        if (!computerComponents[key].name || !computerComponents[key].serial) {\r\n          alert(`Please enter Name and Serial Number for ${key.toUpperCase()}`);\r\n          return;\r\n        }\r\n        const id = generateTrackingId();\r\n        newTrackingIds[key] = id;\r\n        newQrCodes[key] = JSON.stringify({\r\n          name,\r\n          company,\r\n          department,\r\n          mainCategory,\r\n          type: type === \"Other\" ? customType : type,\r\n          assetUpdateDate,\r\n          assetName: computerComponents[key].name,\r\n          serialNumber: computerComponents[key].serial,\r\n          trackingId: id,\r\n          specialNote\r\n        });\r\n      }\r\n\r\n      setTrackingIds((prev) => ({ ...prev, ...newTrackingIds }));\r\n      setQrCodes((prev) => ({ ...prev, ...newQrCodes }));\r\n    } else {\r\n      const id = generateTrackingId();\r\n      setTrackingIds({ single: id });\r\n      setQrCodes({\r\n        single: JSON.stringify({\r\n          name,\r\n          company,\r\n          department,\r\n          mainCategory,\r\n          type: type === \"Other\" ? customType : type,\r\n          assetUpdateDate,\r\n          serialNumber: mainCategory === \"Electronic items\" ? specialNote : null,\r\n          trackingId: id,\r\n          specialNote\r\n        })\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDownloadCombinedImage = async () => {\r\n    try {\r\n      if (!qrCodeContainerRef.current) return;\r\n      const canvas = await html2canvas(qrCodeContainerRef.current);\r\n      const link = document.createElement(\"a\");\r\n      link.download = \"QRCodeWithTrackingID.png\";\r\n      link.href = canvas.toDataURL(\"image/png\");\r\n      link.click();\r\n    } catch (error) {\r\n      console.error(\"Failed to download the QR code image:\", error);\r\n      alert(\"Error occurred while downloading the QR code. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!name || !company || !department || !mainCategory || !assetUpdateDate || !type) {\r\n      alert(\"Please fill in all fields before submitting.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const assetData = {\r\n        name,\r\n        company,\r\n        department,\r\n        mainCategory,\r\n        type: type === \"Other\" ? customType : type,\r\n        assetName: computerComponents && typeof computerComponents === \"object\" ? computerComponents : assetName,\r\n        assetUpdateDate,\r\n        serialNumber: mainCategory === \"Electronic items\" ? specialNote : null,\r\n        trackingId: trackingIds.single || trackingIds.monitor,\r\n        specialNote,\r\n        computerComponents\r\n      };\r\n\r\n      const response = await axios.post(\"http://localhost:8000/api/AssetRegisterDetails\", assetData);\r\n      alert(response.data.message);\r\n      // Reset form\r\n      setCompany(\"\");\r\n      setDepartment(\"\");\r\n      setMainCategory(\"\");\r\n      setType(\"\");\r\n      setAssetUpdateDate(\"\");\r\n      setSpecialNote(\"\");\r\n      setTrackingIds({});\r\n      setQrCodes({});\r\n      setComputerComponents({});\r\n      setCustomType(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error submitting data:\", error);\r\n      alert(\"Error creating asset. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"asset-register\">\r\n      <h2>Asset Registration</h2>\r\n\r\n      {/* Input Fields */}\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          placeholder=\"Enter your Name\"\r\n          readOnly={Boolean(user)}\r\n        />\r\n        <select value={company} onChange={(e) => setCompany(e.target.value)}>\r\n          <option value=\"\">Select Company</option>\r\n          {companies.map((com) => (\r\n            <option key={com} value={com}>{com}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select value={department} onChange={(e) => setDepartment(e.target.value)}>\r\n          <option value=\"\">Select Department</option>\r\n          {departments.map((dep) => (\r\n            <option key={dep} value={dep}>{dep}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select value={mainCategory} onChange={(e) => setMainCategory(e.target.value)}>\r\n          <option value=\"\">Select Category</option>\r\n          {mainCategories.map((cat) => (\r\n            <option key={cat} value={cat}>{cat}</option>\r\n          ))}\r\n        </select>\r\n\r\n        {mainCategory && (\r\n          <select value={type} onChange={(e) => setType(e.target.value)}>\r\n            <option value=\"\">Select Type</option>\r\n            {types.map((t, index) => (\r\n              <option key={index} value={t}>{t}</option>\r\n            ))}\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n        )}\r\n\r\n        {type === \"Other\" && (\r\n          <input\r\n            type=\"text\"\r\n            value={customType}\r\n            onChange={(e) => setCustomType(e.target.value)}\r\n            placeholder=\"Enter Custom Type\"\r\n          />\r\n        )}\r\n\r\n        {type === \"Computer\" && (\r\n          <div>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"computerComponent\"\r\n                value=\"fullSet\"\r\n                onChange={handleComponentChange}\r\n                checked={computerComponents === \"fullSet\"}\r\n              /> Full Set\r\n            </label>\r\n\r\n            {computerComponents === \"fullSet\" && (\r\n              <div>\r\n                {[\"cpu\", \"monitor\", \"mouse\", \"keyboard\"].map((comp) => (\r\n                  <div key={comp}>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder={`${comp.toUpperCase()} Name`}\r\n                      onChange={(e) => setComputerComponents((prev) => ({\r\n                        ...prev,\r\n                        [comp]: { ...prev?.[comp], name: e.target.value }\r\n                      }))} />\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder={`${comp.toUpperCase()} Serial`}\r\n                      onChange={(e) => setComputerComponents((prev) => ({\r\n                        ...prev,\r\n                        [comp]: { ...prev?.[comp], serial: e.target.value }\r\n                      }))} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Date */}\r\n        <input\r\n          type=\"date\"\r\n          value={assetUpdateDate}\r\n          onChange={(e) => setAssetUpdateDate(e.target.value)}\r\n        />\r\n\r\n        {/* Special Note */}\r\n        <textarea\r\n          value={specialNote}\r\n          onChange={(e) => setSpecialNote(e.target.value)}\r\n          placeholder=\"Special Note (Optional)\"\r\n        />\r\n      </div>\r\n\r\n      {/* QR Code */}\r\n      <div>\r\n        <button onClick={handleGenerateQR}>Generate QR Code</button>\r\n        <button onClick={handleDownloadCombinedImage}>Download QR Code</button>\r\n      </div>\r\n\r\n      <div ref={qrCodeContainerRef}>\r\n        {Object.keys(qrCodes).map((key) => (\r\n          <div key={key}>\r\n            <QRCode value={qrCodes[key]} size={150} />\r\n            <p>Tracking ID: {trackingIds[key]}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button onClick={handleSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssetRegister;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}