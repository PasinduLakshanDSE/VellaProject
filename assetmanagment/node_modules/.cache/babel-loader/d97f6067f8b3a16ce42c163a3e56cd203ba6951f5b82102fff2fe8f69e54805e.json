{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\AssetManagmentSystemVella\\\\assetmanagment\\\\src\\\\components\\\\Admin\\\\AssetRegistration\\\\AssetRegister.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { QRCode } from \"react-qrcode-logo\";\nimport html2canvas from \"html2canvas\";\nimport \"./assetRegister.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssetRegister = () => {\n  _s();\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\n  const [name, setName] = useState((user === null || user === void 0 ? void 0 : user.username) || \"\");\n  const [company, setCompany] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n  const [mainCategory, setMainCategory] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [assetName, setAssetName] = useState(\"\");\n  const [CPUassetName, setCPUAssetName] = useState(\"\");\n  const [MoniterassetName, setMoniterAssetName] = useState(\"\");\n  const [MouseassetName, setMouseAssetName] = useState(\"\");\n  const [KeyboardassetName, setKeyboardAssetName] = useState(\"\");\n  const [assetUpdateDate, setAssetUpdateDate] = useState(\"\");\n  const [serialNumber, setSerialNumber] = useState(\"\");\n  const [CPUserialNumber, setCPUSerialNumber] = useState(\"\");\n  const [MoniterserialNumber, setMoniterSerialNumber] = useState(\"\");\n  const [MouseserialNumber, setMouseSerialNumber] = useState(\"\");\n  const [KeyboardserialNumber, setKeyboardSerialNumber] = useState(\"\");\n  //const [serialNumber, setSerialNumber] = useState(\"\");\n  const [qrCodeData, setQrCodeData] = useState(null);\n  const [trackingId, setTrackingId] = useState(\"\");\n  const [specialNote, setSpecialNote] = useState(\"\");\n  const [customType, setCustomType] = useState(\"\");\n  /*const [computerComponents, setComputerComponents] = useState(/*{\r\n    fullPack: false,\r\n    monitor: false,\r\n    cpu: false,\r\n    mouse: false,\r\n    keyboard: false,\r\n  };*/\n  const [computerComponents, setComputerComponents] = useState(\"\");\n  const qrCodeContainerRef = useRef();\n  const mainCategories = [\"Electronic items\", \"Laundry & Linen\", \"Housekeeping Supplies\", \"Electrical items\", \"Security & Safety\", \"Furniture\", \"Outdoor & Garden Equipment\", \"Stationery\"];\n  const companies = [\"Vella\", \"98 Acers\", \"Ravana Pool Club\", \"Flying Ravana\", \"Le Maas Tota\", \"Tea Factory\"];\n  const departments = [\"IT\", \"HR\", \"Kitchen\", \"Front Office\", \"Store\", \"Account\", \"Audit\"];\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  useEffect(() => {\n    if (mainCategory) filterTypes();else setTypes([]);\n  }, [mainCategory, categories]);\n  const fetchCategories = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/api/categories/getCategory\");\n      setCategories(response.data);\n    } catch (error) {\n      console.error(\"Error fetching categories:\", error);\n    }\n  };\n  const filterTypes = () => {\n    const filtered = categories.filter(category => category.category === mainCategory).map(category => category.types).flat();\n    setTypes(filtered);\n  };\n  const generateTrackingId = () => {\n    const companyCodes = {\n      Vella: \"VE\",\n      \"98 Acers\": \"98\",\n      \"Ravana Pool Club\": \"RPC\",\n      \"Flying Ravana\": \"FR\",\n      \"Le Maas Tota\": \"LMT\",\n      \"Tea Factory\": \"TF\"\n    };\n    const departmentCodes = {\n      IT: \"IT\",\n      HR: \"HR\",\n      Kitchen: \"KT\",\n      Store: \"ST\",\n      \"Front Office\": \"FO\",\n      Account: \"AC\",\n      Audit: \"AU\"\n    };\n    const companyCode = companyCodes[company] || \"XX\";\n    const departmentCode = departmentCodes[department] || \"XX\";\n    const serialSuffix = mainCategory === \"Electronic items\" && serialNumber ? serialNumber.slice(-4) : \"\";\n    const randomNum = `${new Date().toISOString().slice(2, 10).replace(/-/g, \"\")}${String(Math.floor(Math.random() * 100)).padStart(2, \"0\")}`;\n    return serialNumber ? `${companyCode}-${departmentCode}-${serialSuffix}` : `${companyCode}-${departmentCode}-${randomNum}`;\n  };\n  const handleComponentChange = e => {\n    const value = e.target.value;\n    if (value === \"fullSet\") {\n      setComputerComponents(\"fullSet\");\n    } else {\n      setComputerComponents(value);\n    }\n  };\n  const handleGenerateQR = () => {\n    if (!name || !company || !department || !mainCategory) {\n      alert(\"Please fill in all fields before generating the QR code.\");\n      return;\n    }\n    let qrDataArray = [];\n    if (computerComponents === \"fullSet\") {\n      const items = [{\n        asset: CPUassetName,\n        serial: CPUserialNumber,\n        label: \"CPU\"\n      }, {\n        asset: MoniterassetName,\n        serial: MoniterserialNumber,\n        label: \"Monitor\"\n      }, {\n        asset: MouseassetName,\n        serial: MouseserialNumber,\n        label: \"Mouse\"\n      }, {\n        asset: KeyboardassetName,\n        serial: KeyboardserialNumber,\n        label: \"Keyboard\"\n      }];\n      items.forEach(item => {\n        if (item.asset) {\n          const id = generateTrackingId(); // Generate a unique tracking ID\n          const qrData = JSON.stringify({\n            name,\n            company,\n            department,\n            mainCategory,\n            assetName: item.asset,\n            type,\n            assetUpdateDate,\n            serialNumber: item.serial,\n            trackingId: id,\n            component: item.label,\n            specialNote\n          });\n          qrDataArray.push({\n            qrData,\n            trackingId: id,\n            component: item.label\n          });\n        }\n      });\n    } else {\n      // Normal QR generation\n      const id = generateTrackingId();\n      const qrData = JSON.stringify({\n        name,\n        company,\n        department,\n        mainCategory,\n        assetName,\n        type,\n        assetUpdateDate,\n        serialNumber,\n        trackingId: id,\n        specialNote\n      });\n      qrDataArray.push({\n        qrData,\n        trackingId: id\n      });\n    }\n    setQrCodeData(qrDataArray);\n  };\n\n  /*const handleGenerateQR = () => {\r\n    if (!name || !company || !department || !mainCategory /*|| !assetName || !assetUpdateDate || !type || !CPUassetName || !MoniterassetName || !MouseassetName || !KeyboardassetName) {\r\n     /* alert(\"Please fill in all fields before generating the QR code.\");\r\n      return;\r\n    }\r\n      /*if (mainCategory === \"Electronic items\" && !serialNumber) {\r\n      alert(\"Please enter a Serial Number for Electronics.\");\r\n      return;\r\n    }\r\n      setTrackingId(generateTrackingId());\r\n  };\r\n  */\n  useEffect(() => {\n    if (trackingId) {\n      const qrData = JSON.stringify({\n        name,\n        company,\n        department,\n        mainCategory,\n        assetName,\n        CPUassetName,\n        MoniterassetName,\n        MouseassetName,\n        KeyboardassetName,\n        type: type === \"Other\" ? customType : type,\n        assetUpdateDate,\n        serialNumber: mainCategory === \"Electronic items\" ? serialNumber : null,\n        trackingId,\n        computerComponents,\n        specialNote\n      });\n      setQrCodeData(qrData);\n    }\n  }, [trackingId]);\n  const handleDownloadCombinedImage = async () => {\n    try {\n      if (!qrCodeContainerRef.current) return;\n      const canvas = await html2canvas(qrCodeContainerRef.current);\n      const link = document.createElement(\"a\");\n      link.download = \"QRCodeWithTrackingID.png\";\n      link.href = canvas.toDataURL(\"image/png\");\n      link.click();\n    } catch (error) {\n      console.error(\"Failed to download the QR code image:\", error);\n      alert(\"Error occurred while downloading the QR code. Please try again.\");\n    }\n  };\n  const handleSubmit = async () => {\n    /*if (!name || !company || !department || !mainCategory || !assetName || !CPUassetName || !MoniterassetName || !MouseassetName  || !KeyboardassetName || !assetUpdateDate || !type) {\r\n      alert(\"Please fill in all fields before submitting.\");\r\n      return;\r\n    }*/\n\n    try {\n      const assetData = {\n        name,\n        company,\n        department,\n        mainCategory,\n        type: type === \"Other\" ? customType : type,\n        assetName,\n        CPUassetName,\n        MoniterassetName,\n        MouseassetName,\n        KeyboardassetName,\n        assetUpdateDate,\n        serialNumber: mainCategory === \"Electronic items\" ? serialNumber : null,\n        trackingId,\n        specialNote,\n        computerComponents\n      };\n      const response = await axios.post(\"http://localhost:8000/api/AssetRegisterDetails\", assetData);\n      alert(response.data.message);\n      // Reset form\n      setCompany(\"\");\n      setDepartment(\"\");\n      setMainCategory(\"\");\n      setType(\"\");\n      setAssetName(\"\");\n      setCPUAssetName(\"\");\n      setMoniterAssetName(\"\");\n      setMouseAssetName(\"\");\n      setKeyboardAssetName(\"\");\n      setAssetUpdateDate(\"\");\n      setSerialNumber(\"\");\n      setQrCodeData(null);\n      setTrackingId(\"\");\n      setSpecialNote(\"\");\n      setCustomType(\"\");\n      setComputerComponents(/*{ fullPack: false, monitor: false, cpu: false, mouse: false, keyboard: false }*/\"\");\n    } catch (error) {\n      console.error(\"Error submitting data:\", error);\n      alert(\"Error creating asset. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"asset-register\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"registerhead\",\n        children: \"Asset Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Enter your Name\",\n          readOnly: Boolean(user)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: company,\n          onChange: e => setCompany(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), companies.map(com => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: com,\n            children: com\n          }, com, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: department,\n          onChange: e => setDepartment(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), departments.map(dep => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: dep,\n            children: dep\n          }, dep, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: mainCategory,\n          onChange: e => setMainCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), mainCategories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat,\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), mainCategory && /*#__PURE__*/_jsxDEV(\"select\", {\n          value: type,\n          onChange: e => setType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), types.map((t, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: t,\n            children: t\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Other\",\n            children: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), type === \"Other\" && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: customType,\n          onChange: e => setCustomType(e.target.value),\n          placeholder: \"Enter Custom Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 3\n        }, this), type === \"Computer\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"computer-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"l\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"computerComponent\",\n              value: \"fullSet\",\n              onChange: handleComponentChange,\n              checked: computerComponents === \"fullSet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 7\n            }, this), \" Full Set\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 5\n          }, this), computerComponents === \"fullSet\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fullset-components\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"l\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: true,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 11\n              }, this), \" CPU\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: CPUassetName,\n                onChange: e => setCPUAssetName(e.target.value),\n                placeholder: \"Enter Asset Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: CPUserialNumber,\n                onChange: e => setCPUSerialNumber(e.target.value),\n                placeholder: \"Enter Serial Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-group\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button generate-btn\",\n                onClick: handleGenerateQR,\n                children: \"Generate QR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"l\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: true,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 11\n              }, this), \" Monitor\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: MoniterassetName,\n                onChange: e => setMoniterAssetName(e.target.value),\n                placeholder: \"Enter Asset Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 61\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: MoniterserialNumber,\n                onChange: e => setMoniterSerialNumber(e.target.value),\n                placeholder: \"Enter Serial Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-group\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button generate-btn\",\n                onClick: handleGenerateQR,\n                children: \"Generate QR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"l\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: true,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 11\n              }, this), \" Mouse \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: MouseassetName,\n                onChange: e => setMouseAssetName(e.target.value),\n                placeholder: \"Enter Asset Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 60\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: MouseserialNumber,\n                onChange: e => setMouseSerialNumber(e.target.value),\n                placeholder: \"Enter Serial Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-group\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button generate-btn\",\n                onClick: handleGenerateQR,\n                children: \"Generate QR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"l\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: true,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 11\n              }, this), \" Keyboard \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: KeyboardassetName,\n                onChange: e => setKeyboardAssetName(e.target.value),\n                placeholder: \"Enter Asset Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 63\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: KeyboardserialNumber,\n                onChange: e => setKeyboardSerialNumber(e.target.value),\n                placeholder: \"Enter Serial Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-group\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button generate-btn\",\n                onClick: handleGenerateQR,\n                children: \"Generate QR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 3\n        }, this), computerComponents != \"fullSet\" && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: assetName,\n          onChange: e => setAssetName(e.target.value),\n          placeholder: \"Enter Asset Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), mainCategory === \"Electronic items\" && computerComponents != \"fullSet\" && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: serialNumber,\n          onChange: e => setSerialNumber(e.target.value),\n          placeholder: \"Enter Serial Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: assetUpdateDate,\n          onChange: e => setAssetUpdateDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: specialNote,\n          onChange: e => setSpecialNote(e.target.value),\n          placeholder: \"Enter Special Note (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), computerComponents != \"fullSet\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button generate-btn\",\n            onClick: handleGenerateQR,\n            children: \"Generate QR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), qrCodeData && qrCodeData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qr-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Generated QR Codes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 5\n          }, this), qrCodeData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: qrCodeContainerRef,\n            className: \"combined-qr-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: item.component\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(QRCode, {\n              value: item.qrData,\n              size: 200,\n              qrStyle: \"squares\",\n              logoImage: \"https://via.placeholder.com/30\",\n              logoWidth: 50\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"ID: \", item.trackingId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 9\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 7\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button2 download-btn\",\n            onClick: handleDownloadCombinedImage,\n            children: [\"Download All \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 3\n        }, this), \")}\", trackingId && qrCodeData && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button3\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\n_s(AssetRegister, \"l0wO2l8IY6DOiwbQY5jp/0ygzKI=\");\n_c = AssetRegister;\nexport default AssetRegister;\nvar _c;\n$RefreshReg$(_c, \"AssetRegister\");","map":{"version":3,"names":["React","useState","useRef","useEffect","QRCode","html2canvas","axios","jsxDEV","_jsxDEV","AssetRegister","_s","user","JSON","parse","localStorage","getItem","name","setName","username","company","setCompany","department","setDepartment","mainCategory","setMainCategory","type","setType","categories","setCategories","types","setTypes","assetName","setAssetName","CPUassetName","setCPUAssetName","MoniterassetName","setMoniterAssetName","MouseassetName","setMouseAssetName","KeyboardassetName","setKeyboardAssetName","assetUpdateDate","setAssetUpdateDate","serialNumber","setSerialNumber","CPUserialNumber","setCPUSerialNumber","MoniterserialNumber","setMoniterSerialNumber","MouseserialNumber","setMouseSerialNumber","KeyboardserialNumber","setKeyboardSerialNumber","qrCodeData","setQrCodeData","trackingId","setTrackingId","specialNote","setSpecialNote","customType","setCustomType","computerComponents","setComputerComponents","qrCodeContainerRef","mainCategories","companies","departments","fetchCategories","filterTypes","response","get","data","error","console","filtered","filter","category","map","flat","generateTrackingId","companyCodes","Vella","departmentCodes","IT","HR","Kitchen","Store","Account","Audit","companyCode","departmentCode","serialSuffix","slice","randomNum","Date","toISOString","replace","String","Math","floor","random","padStart","handleComponentChange","e","value","target","handleGenerateQR","alert","qrDataArray","items","asset","serial","label","forEach","item","id","qrData","stringify","component","push","handleDownloadCombinedImage","current","canvas","link","document","createElement","download","href","toDataURL","click","handleSubmit","assetData","post","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","readOnly","Boolean","com","dep","cat","t","index","checked","onClick","length","ref","size","qrStyle","logoImage","logoWidth","_c","$RefreshReg$"],"sources":["C:/projects/AssetManagmentSystemVella/assetmanagment/src/components/Admin/AssetRegistration/AssetRegister.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { QRCode } from \"react-qrcode-logo\";\r\nimport html2canvas from \"html2canvas\";\r\nimport \"./assetRegister.css\";\r\nimport axios from \"axios\";\r\n\r\nconst AssetRegister = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const [name, setName] = useState(user?.username || \"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [mainCategory, setMainCategory] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [types, setTypes] = useState([]);\r\n  const [assetName, setAssetName] = useState(\"\");\r\n  const [CPUassetName, setCPUAssetName] = useState(\"\");\r\n  const [MoniterassetName, setMoniterAssetName] = useState(\"\");\r\n  const [MouseassetName, setMouseAssetName] = useState(\"\");\r\n  const [KeyboardassetName, setKeyboardAssetName] = useState(\"\");\r\n  const [assetUpdateDate, setAssetUpdateDate] = useState(\"\");\r\n  const [serialNumber, setSerialNumber] = useState(\"\");\r\n  const [CPUserialNumber, setCPUSerialNumber] = useState(\"\");\r\n  const [MoniterserialNumber, setMoniterSerialNumber] = useState(\"\");\r\n  const [MouseserialNumber, setMouseSerialNumber] = useState(\"\");\r\n  const [KeyboardserialNumber, setKeyboardSerialNumber] = useState(\"\");\r\n  //const [serialNumber, setSerialNumber] = useState(\"\");\r\n  const [qrCodeData, setQrCodeData] = useState(null);\r\n  const [trackingId, setTrackingId] = useState(\"\");\r\n  const [specialNote, setSpecialNote] = useState(\"\");\r\n  const [customType, setCustomType] = useState(\"\");\r\n  /*const [computerComponents, setComputerComponents] = useState(/*{\r\n    fullPack: false,\r\n    monitor: false,\r\n    cpu: false,\r\n    mouse: false,\r\n    keyboard: false,\r\n  };*/\r\n  const [computerComponents, setComputerComponents] = useState(\"\");\r\n\r\n\r\n  const qrCodeContainerRef = useRef();\r\n\r\n  const mainCategories = [\r\n    \"Electronic items\",\r\n    \"Laundry & Linen\",\r\n    \"Housekeeping Supplies\",\r\n    \"Electrical items\",\r\n    \"Security & Safety\",\r\n    \"Furniture\",\r\n    \"Outdoor & Garden Equipment\",\r\n    \"Stationery\",\r\n  ];\r\n\r\n  const companies = [\"Vella\", \"98 Acers\", \"Ravana Pool Club\", \"Flying Ravana\", \"Le Maas Tota\", \"Tea Factory\"];\r\n  const departments = [\"IT\", \"HR\", \"Kitchen\", \"Front Office\", \"Store\", \"Account\", \"Audit\"];\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (mainCategory) filterTypes();\r\n    else setTypes([]);\r\n  }, [mainCategory, categories]);\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8000/api/categories/getCategory\");\r\n      setCategories(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching categories:\", error);\r\n    }\r\n  };\r\n\r\n  const filterTypes = () => {\r\n    const filtered = categories\r\n      .filter((category) => category.category === mainCategory)\r\n      .map((category) => category.types)\r\n      .flat();\r\n    setTypes(filtered);\r\n  };\r\n\r\n  const generateTrackingId = () => {\r\n    const companyCodes = { Vella: \"VE\", \"98 Acers\": \"98\", \"Ravana Pool Club\": \"RPC\", \"Flying Ravana\": \"FR\", \"Le Maas Tota\": \"LMT\", \"Tea Factory\": \"TF\" };\r\n    const departmentCodes = { IT: \"IT\", HR: \"HR\", Kitchen: \"KT\", Store: \"ST\", \"Front Office\": \"FO\", Account: \"AC\", Audit: \"AU\" };\r\n\r\n    const companyCode = companyCodes[company] || \"XX\";\r\n    const departmentCode = departmentCodes[department] || \"XX\";\r\n    const serialSuffix = mainCategory === \"Electronic items\" && serialNumber ? serialNumber.slice(-4) : \"\";\r\n    const randomNum = `${new Date().toISOString().slice(2, 10).replace(/-/g, \"\")}${String(Math.floor(Math.random() * 100)).padStart(2, \"0\")}`;\r\n\r\n    return serialNumber ? `${companyCode}-${departmentCode}-${serialSuffix}` : `${companyCode}-${departmentCode}-${randomNum}`;\r\n  };\r\n\r\n  const handleComponentChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value === \"fullSet\") {\r\n      setComputerComponents(\"fullSet\");\r\n    } else {\r\n      setComputerComponents(value);\r\n    }\r\n  };\r\n  \r\n  const handleGenerateQR = () => {\r\n    if (!name || !company || !department || !mainCategory) {\r\n      alert(\"Please fill in all fields before generating the QR code.\");\r\n      return;\r\n    }\r\n  \r\n    let qrDataArray = [];\r\n  \r\n    if (computerComponents === \"fullSet\") {\r\n      const items = [\r\n        { asset: CPUassetName, serial: CPUserialNumber, label: \"CPU\" },\r\n        { asset: MoniterassetName, serial: MoniterserialNumber, label: \"Monitor\" },\r\n        { asset: MouseassetName, serial: MouseserialNumber, label: \"Mouse\" },\r\n        { asset: KeyboardassetName, serial: KeyboardserialNumber, label: \"Keyboard\" }\r\n      ];\r\n  \r\n      items.forEach((item) => {\r\n        if (item.asset) {\r\n          const id = generateTrackingId(); // Generate a unique tracking ID\r\n          const qrData = JSON.stringify({\r\n            name,\r\n            company,\r\n            department,\r\n            mainCategory,\r\n            assetName: item.asset,\r\n            type,\r\n            assetUpdateDate,\r\n            serialNumber: item.serial,\r\n            trackingId: id,\r\n            component: item.label,\r\n            specialNote,\r\n          });\r\n  \r\n          qrDataArray.push({ qrData, trackingId: id, component: item.label });\r\n        }\r\n      });\r\n  \r\n    } else {\r\n      // Normal QR generation\r\n      const id = generateTrackingId();\r\n      const qrData = JSON.stringify({\r\n        name,\r\n        company,\r\n        department,\r\n        mainCategory,\r\n        assetName,\r\n        type,\r\n        assetUpdateDate,\r\n        serialNumber,\r\n        trackingId: id,\r\n        specialNote,\r\n      });\r\n  \r\n      qrDataArray.push({ qrData, trackingId: id });\r\n    }\r\n  \r\n    setQrCodeData(qrDataArray);\r\n  };\r\n  \r\n\r\n  /*const handleGenerateQR = () => {\r\n    if (!name || !company || !department || !mainCategory /*|| !assetName || !assetUpdateDate || !type || !CPUassetName || !MoniterassetName || !MouseassetName || !KeyboardassetName) {\r\n     /* alert(\"Please fill in all fields before generating the QR code.\");\r\n      return;\r\n    }\r\n\r\n    /*if (mainCategory === \"Electronic items\" && !serialNumber) {\r\n      alert(\"Please enter a Serial Number for Electronics.\");\r\n      return;\r\n    }\r\n\r\n    setTrackingId(generateTrackingId());\r\n  };\r\n*/\r\n  useEffect(() => {\r\n    if (trackingId) {\r\n      const qrData = JSON.stringify({\r\n        name,\r\n        company,\r\n        department,\r\n        mainCategory,\r\n        assetName,\r\n        CPUassetName, \r\n        MoniterassetName, \r\n        MouseassetName,\r\n        KeyboardassetName,\r\n        type: type === \"Other\" ? customType : type,\r\n        assetUpdateDate,\r\n        serialNumber: mainCategory === \"Electronic items\" ? serialNumber : null,\r\n        trackingId,\r\n        computerComponents,\r\n        specialNote,\r\n      });\r\n      setQrCodeData(qrData);\r\n    }\r\n  }, [trackingId]);\r\n\r\n  const handleDownloadCombinedImage = async () => {\r\n    try {\r\n      if (!qrCodeContainerRef.current) return;\r\n      const canvas = await html2canvas(qrCodeContainerRef.current);\r\n      const link = document.createElement(\"a\");\r\n      link.download = \"QRCodeWithTrackingID.png\";\r\n      link.href = canvas.toDataURL(\"image/png\");\r\n      link.click();\r\n    } catch (error) {\r\n      console.error(\"Failed to download the QR code image:\", error);\r\n      alert(\"Error occurred while downloading the QR code. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    /*if (!name || !company || !department || !mainCategory || !assetName || !CPUassetName || !MoniterassetName || !MouseassetName  || !KeyboardassetName || !assetUpdateDate || !type) {\r\n      alert(\"Please fill in all fields before submitting.\");\r\n      return;\r\n    }*/\r\n\r\n    try {\r\n      const assetData = {\r\n        name,\r\n        company,\r\n        department,\r\n        mainCategory,\r\n        type: type === \"Other\" ? customType : type,\r\n        assetName,\r\n        CPUassetName, \r\n        MoniterassetName, \r\n        MouseassetName,\r\n        KeyboardassetName,\r\n        assetUpdateDate,\r\n        serialNumber: mainCategory === \"Electronic items\" ? serialNumber : null,\r\n        trackingId,\r\n        specialNote,\r\n        computerComponents,\r\n      };\r\n\r\n      const response = await axios.post(\"http://localhost:8000/api/AssetRegisterDetails\", assetData);\r\n      alert(response.data.message);\r\n      // Reset form\r\n      setCompany(\"\");\r\n      setDepartment(\"\");\r\n      setMainCategory(\"\");\r\n      setType(\"\");\r\n      setAssetName(\"\");\r\n      setCPUAssetName(\"\");\r\n  setMoniterAssetName(\"\");\r\n   setMouseAssetName(\"\");\r\n  setKeyboardAssetName(\"\");\r\n      setAssetUpdateDate(\"\");\r\n      setSerialNumber(\"\");\r\n      setQrCodeData(null);\r\n      setTrackingId(\"\");\r\n      setSpecialNote(\"\");\r\n      setCustomType(\"\");\r\n      setComputerComponents(/*{ fullPack: false, monitor: false, cpu: false, mouse: false, keyboard: false }*/\"\");\r\n    } catch (error) {\r\n      console.error(\"Error submitting data:\", error);\r\n      alert(\"Error creating asset. Please try again.\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"asset-register\">\r\n      <div className=\"form-container\">\r\n        <h2 className=\"registerhead\">Asset Registration</h2>\r\n        <div className=\"input-box\">\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            placeholder=\"Enter your Name\"\r\n            readOnly={Boolean(user)}\r\n          />\r\n          <select value={company} onChange={(e) => setCompany(e.target.value)}>\r\n            <option value=\"\">Select Company</option>\r\n            {companies.map((com) => (\r\n              <option key={com} value={com}>{com}</option>\r\n            ))}\r\n          </select>\r\n\r\n          <select value={department} onChange={(e) => setDepartment(e.target.value)}>\r\n            <option value=\"\">Select Department</option>\r\n            {departments.map((dep) => (\r\n              <option key={dep} value={dep}>{dep}</option>\r\n            ))}\r\n          </select>\r\n\r\n          <select value={mainCategory} onChange={(e) => setMainCategory(e.target.value)}>\r\n            <option value=\"\">Select Category</option>\r\n            {mainCategories.map((cat) => (\r\n              <option key={cat} value={cat}>{cat}</option>\r\n            ))}\r\n          </select>\r\n\r\n          {mainCategory && (\r\n            <select value={type} onChange={(e) => setType(e.target.value)}>\r\n              <option value=\"\">Select Type</option>\r\n              {types.map((t, index) => (\r\n                <option key={index} value={t}>{t}</option>\r\n               \r\n              ))}\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n          )}\r\n         \r\n {type === \"Other\" && (\r\n  <input\r\n    type=\"text\"\r\n    value={customType}\r\n    onChange={(e) => setCustomType(e.target.value)}\r\n    placeholder=\"Enter Custom Type\"\r\n  />\r\n)}\r\n\r\n{type === \"Computer\" && (\r\n  <div className=\"computer-options\">\r\n    <label className=\"l\">\r\n      <input\r\n        type=\"radio\"\r\n        name=\"computerComponent\"\r\n        value=\"fullSet\"\r\n        onChange={handleComponentChange}\r\n        checked={computerComponents === \"fullSet\"}\r\n      /> Full Set\r\n    </label>\r\n\r\n    {/* Show full set components only if \"Full Set\" is selected */}\r\n    {computerComponents === \"fullSet\" && (\r\n      <div className=\"fullset-components\">\r\n        <label className=\"l\">\r\n          <input type=\"checkbox\" checked readOnly /> CPU\r\n          <input\r\n            type=\"text\"\r\n            value={CPUassetName}\r\n            onChange={(e) => setCPUAssetName(e.target.value)}\r\n            placeholder=\"Enter Asset Name\"\r\n          />\r\n          \r\n          <input\r\n              type=\"text\"\r\n              value={CPUserialNumber}\r\n              onChange={(e) => setCPUSerialNumber(e.target.value)}\r\n              placeholder=\"Enter Serial Number\"\r\n            />\r\n        </label>\r\n        <div className=\"button-group\">\r\n            <button className=\"button generate-btn\" onClick={handleGenerateQR}>Generate QR</button>\r\n          </div>\r\n\r\n\r\n\r\n\r\n        <label className=\"l\">\r\n          <input type=\"checkbox\" checked readOnly /> Monitor<input\r\n            type=\"text\"\r\n            value={MoniterassetName}\r\n            onChange={(e) => setMoniterAssetName(e.target.value)}\r\n            placeholder=\"Enter Asset Name\"\r\n          />\r\n          <input\r\n              type=\"text\"\r\n              value={MoniterserialNumber}\r\n              onChange={(e) => setMoniterSerialNumber(e.target.value)}\r\n              placeholder=\"Enter Serial Number\"\r\n            />\r\n        </label>\r\n        <div className=\"button-group\">\r\n            <button className=\"button generate-btn\" onClick={handleGenerateQR}>Generate QR</button>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <label className=\"l\">\r\n          <input type=\"checkbox\" checked readOnly /> Mouse <input\r\n            type=\"text\"\r\n            value={MouseassetName}\r\n            onChange={(e) => setMouseAssetName(e.target.value)}\r\n            placeholder=\"Enter Asset Name\"\r\n          />\r\n          <input\r\n              type=\"text\"\r\n              value={MouseserialNumber}\r\n              onChange={(e) => setMouseSerialNumber(e.target.value)}\r\n              placeholder=\"Enter Serial Number\"\r\n            />\r\n        </label><div className=\"button-group\">\r\n            <button className=\"button generate-btn\" onClick={handleGenerateQR}>Generate QR</button>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <label className=\"l\">\r\n          <input type=\"checkbox\" checked readOnly /> Keyboard <input\r\n            type=\"text\"\r\n            value={KeyboardassetName}\r\n            onChange={(e) => setKeyboardAssetName(e.target.value)}\r\n            placeholder=\"Enter Asset Name\"\r\n          />\r\n          <input\r\n              type=\"text\"\r\n              value={KeyboardserialNumber}\r\n              onChange={(e) => setKeyboardSerialNumber(e.target.value)}\r\n              placeholder=\"Enter Serial Number\"\r\n            />\r\n        </label>\r\n        <div className=\"button-group\">\r\n            <button className=\"button generate-btn\" onClick={handleGenerateQR}>Generate QR</button>\r\n          </div>\r\n      </div>\r\n    )}\r\n\r\n    \r\n       {/* <label className=\"l\">\r\n          <input type=\"radio\" name=\"computerComponent\" value=\"monitor\" onChange={handleComponentChange} checked={computerComponents === \"monitor\"} /> Monitor\r\n        </label>\r\n        <label className=\"l\">\r\n          <input type=\"radio\" name=\"computerComponent\" value=\"cpu\" onChange={handleComponentChange} checked={computerComponents === \"cpu\"} /> CPU\r\n        </label>\r\n        <label className=\"l\">\r\n          <input type=\"radio\" name=\"computerComponent\" value=\"mouse\" onChange={handleComponentChange} checked={computerComponents === \"mouse\"} /> Mouse\r\n        </label>\r\n        <label className=\"l\">\r\n          <input type=\"radio\" name=\"computerComponent\" value=\"keyboard\" onChange={handleComponentChange} checked={computerComponents === \"keyboard\"} /> Keyboard\r\n        </label>*/}\r\n      \r\n    \r\n  </div>\r\n)}\r\n\r\n{computerComponents != \"fullSet\" && (\r\n          <input\r\n            type=\"text\"\r\n            value={assetName}\r\n            onChange={(e) => setAssetName(e.target.value)}\r\n            placeholder=\"Enter Asset Name\"\r\n          />\r\n)}\r\n          {mainCategory === \"Electronic items\" && computerComponents != \"fullSet\" &&  (\r\n            <input\r\n              type=\"text\"\r\n              value={serialNumber}\r\n              onChange={(e) => setSerialNumber(e.target.value)}\r\n              placeholder=\"Enter Serial Number\"\r\n            />\r\n          )}\r\n\r\n          <input\r\n            type=\"date\"\r\n            value={assetUpdateDate}\r\n            onChange={(e) => setAssetUpdateDate(e.target.value)}\r\n          />\r\n          <input\r\n  type=\"text\"\r\n  value={specialNote}\r\n  onChange={(e) => setSpecialNote(e.target.value)}\r\n  placeholder=\"Enter Special Note (Optional)\"\r\n/>\r\n\r\n{computerComponents != \"fullSet\" &&(\r\n          <div className=\"button-group\">\r\n            <button className=\"button generate-btn\" onClick={handleGenerateQR}>Generate QR</button>\r\n          </div>)}\r\n\r\n          {qrCodeData && qrCodeData.length > 0 && (\r\n  <div className=\"qr-container\">\r\n    <h3>Generated QR Codes</h3>\r\n    {qrCodeData.map((item, index) => (\r\n      <div key={index} ref={qrCodeContainerRef} className=\"combined-qr-container\">\r\n        <h4>{item.component}</h4>\r\n        <QRCode\r\n          value={item.qrData}\r\n          size={200}\r\n          qrStyle=\"squares\"\r\n          logoImage=\"https://via.placeholder.com/30\"\r\n          logoWidth={50}\r\n        />\r\n        <p>ID: {item.trackingId}</p>\r\n      </div>\r\n    ))}\r\n    <button className=\"button2 download-btn\" onClick={handleDownloadCombinedImage}>\r\n      Download All <i className=\"fas fa-download\"></i>\r\n    </button>\r\n  </div>\r\n)}\r\n\r\n          )}\r\n\r\n          {trackingId && qrCodeData && (\r\n            <button className=\"button3\" onClick={handleSubmit}>Submit</button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssetRegister;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}