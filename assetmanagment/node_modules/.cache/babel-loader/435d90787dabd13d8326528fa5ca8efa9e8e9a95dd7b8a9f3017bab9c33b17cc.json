{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\AssetManagmentSystemVella\\\\assetmanagment\\\\src\\\\components\\\\Admin\\\\AssetRegistration\\\\AssetRegister.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { QRCode } from \"react-qrcode-logo\";\nimport html2canvas from \"html2canvas\";\nimport \"./assetRegister.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssetRegister = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\n  const [name, setName] = useState((user === null || user === void 0 ? void 0 : user.username) || \"\");\n  const [company, setCompany] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n  const [mainCategory, setMainCategory] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [assetName, setAssetName] = useState(\"\");\n  const [assetUpdateDate, setAssetUpdateDate] = useState(\"\");\n  const [serialNumber, setSerialNumber] = useState(\"\");\n  const [qrCodeData, setQrCodeData] = useState(null);\n  const [trackingId, setTrackingId] = useState(\"\");\n  const [specialNote, setSpecialNote] = useState(\"\");\n  const qrCodeContainerRef = useRef();\n  const mainCategories = [\"Electronic items\", \"Laundry & Linen\", \"Housekeeping Supplies\", \"Electrical items\", \"Security & Safety\", \"Furniture\", \"Outdoor & Garden Equipment\", \"Stationery\"];\n  const companies = [\"Vella\", \"98 Acers\", \"Ravana Pool Club\", \"Flying Ravana\", \"Le Maas Tota\", \"Tea Factory\"];\n  const departments = [\"IT\", \"HR\", \"Kitchen\", \"Front Office\", \"Store\", \"Account\", \"Audit\"];\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  useEffect(() => {\n    if (mainCategory) {\n      filterTypes();\n    } else {\n      setTypes([]);\n    }\n  }, [mainCategory, categories]);\n  const fetchCategories = async () => {\n    _s();\n    const filterTypes = () => {\n      if (mainCategory) {\n        const filtered = categories.filter(category => category.category === mainCategory).map(category => category.types).flat();\n        setTypes(filtered);\n      }\n    };\n    const generateTrackingId = () => {\n      const companyShortCodes = {\n        Vella: \"VE\",\n        \"98 Acers\": \"98\",\n        \"Ravana Pool Club\": \"RPC\",\n        \"Flying Ravana\": \"FR\",\n        \"Le Maas Tota\": \"LMT\",\n        \"Tea Factory\": \"TF\"\n      };\n      const departmentShortCodes = {\n        IT: \"IT\",\n        HR: \"HR\",\n        Kitchen: \"KT\",\n        Store: \"ST\",\n        \"Front Office\": \"FO\",\n        Account: \"AC\",\n        Audit: \"AU\"\n      };\n      const companyCode = companyShortCodes[company] || \"XX\";\n      const departmentCode = departmentShortCodes[department] || \"XX\";\n      let serialSuffix = \"\";\n      if (mainCategory === \"Electronic items\" && serialNumber) {\n        serialSuffix = serialNumber.slice(-4); // Get last 4 characters of Serial Number\n      }\n      const date = new Date();\n      const yearLast2 = String(date.getFullYear()).slice(-2); // Last 2 digits of the year\n      const month = String(date.getMonth() + 1).padStart(2, '0'); // Month (2 digits)\n      const day = String(date.getDate()).padStart(2, '0'); // Day (2 digits)\n      const Num = String(Math.floor(Math.random() * 100)).padStart(2, '0'); // 2 random digits\n\n      const randomNum = `${yearLast2}${month}${day}${Num}`;\n      if (serialNumber) {\n        return `${companyCode}-${departmentCode}-${serialSuffix}`;\n      }\n      return `${companyCode}-${departmentCode}-${randomNum}`;\n    };\n    const handleGenerateQR = () => {\n      if (!name || !company || !department || !mainCategory || !assetName || !assetUpdateDate || !type) {\n        alert(\"Please fill in all fields before generating the QR code.\");\n        return;\n      }\n      if (mainCategory === \"Electronic items\" && !serialNumber) {\n        alert(\"Please enter a Serial Number for Electronics.\");\n        return;\n      }\n      const uniqueTrackingId = generateTrackingId();\n      setTrackingId(uniqueTrackingId);\n    };\n    useEffect(() => {\n      if (trackingId) {\n        const qrData = JSON.stringify({\n          name,\n          company,\n          department,\n          mainCategory,\n          assetName,\n          type,\n          assetUpdateDate,\n          serialNumber: mainCategory === \"Electronic items\" ? serialNumber : null,\n          trackingId\n        });\n        setQrCodeData(qrData);\n      }\n    }, [trackingId]);\n    const handleSubmit = () => {\n      if (!name || !company || !department || !mainCategory || !assetName || !assetUpdateDate || !type) {\n        alert(\"Please fill in all fields before submitting.\");\n        return;\n      }\n      if (mainCategory === \"Electronic items\" && !serialNumber) {\n        alert(\"Please enter a Serial Number for Electronics.\");\n        return;\n      }\n      if (!trackingId || !qrCodeData) {\n        alert(\"Please generate a Tracking ID and QR Code before submitting.\");\n        return;\n      }\n      const assetData = {\n        name,\n        company,\n        department,\n        mainCategory,\n        type,\n        assetName,\n        assetUpdateDate,\n        serialNumber: mainCategory === \"Electronic items\" ? serialNumber : null,\n        trackingId,\n        specialNote\n      };\n      console.log(\"Asset Data: \", assetData);\n      alert(\"Asset Registered Successfully!\");\n      setCompany(\"\");\n      setDepartment(\"\");\n      setMainCategory(\"\");\n      setType(\"\");\n      setAssetName(\"\");\n      setAssetUpdateDate(\"\");\n      setSerialNumber(\"\");\n      setQrCodeData(null);\n      setTrackingId(\"\");\n      setSpecialNote(\"\");\n    };\n    try {\n      const response = await axios.post(\"http://localhost:8000/api/AssetRegisterDetails\", assetDat);\n      alert(response.data.message); // Success message\n      // Reset form\n      setCompany(\"\");\n      setDepartment(\"\");\n      setMainCategory(\"\");\n      setType(\"\");\n      setAssetName(\"\");\n      setAssetUpdateDate(\"\");\n      setSerialNumber(\"\");\n      setQrCodeData(null);\n      setTrackingId(\"\");\n      setSpecialNote(\"\");\n    } catch (error) {\n      console.error(\"Error submitting data:\", error);\n      alert(\"Error creating category. Please try again.\");\n    }\n  };\n  _s(fetchCategories, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  const handleDownloadCombinedImage = async () => {\n    try {\n      if (!qrCodeContainerRef.current) return;\n      const canvas = await html2canvas(qrCodeContainerRef.current);\n      const link = document.createElement(\"a\");\n      link.download = \"QRCodeWithTrackingID.png\";\n      link.href = canvas.toDataURL(\"image/png\");\n      link.click();\n    } catch (error) {\n      console.error(\"Failed to download the QR code image:\", error);\n      alert(\"Error occurred while downloading the QR code. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"asset-register\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Asset Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Enter your Name\",\n          readOnly: Boolean(user)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: company,\n          onChange: e => setCompany(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), companies.map(com => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: com,\n            children: com\n          }, com, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: department,\n          onChange: e => setDepartment(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), departments.map(dep => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: dep,\n            children: dep\n          }, dep, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: mainCategory,\n          onChange: e => setMainCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), mainCategories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat,\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), mainCategory && /*#__PURE__*/_jsxDEV(\"select\", {\n          value: type,\n          onChange: e => setType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), types.map((t, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: t,\n            children: t\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: assetName,\n          onChange: e => setAssetName(e.target.value),\n          placeholder: \"Enter Asset Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), mainCategory === \"Electronic items\" && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: serialNumber,\n          onChange: e => setSerialNumber(e.target.value),\n          placeholder: \"Enter Serial Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: assetUpdateDate,\n          onChange: e => setAssetUpdateDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: specialNote,\n          onChange: e => setSpecialNote(e.target.value),\n          placeholder: \"Enter Special Note (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button generate-btn\",\n            onClick: handleGenerateQR,\n            children: \"Generate QR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), trackingId && qrCodeData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qr-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Generated QR Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: qrCodeContainerRef,\n            className: \"combined-qr-container\",\n            children: [/*#__PURE__*/_jsxDEV(QRCode, {\n              value: qrCodeData,\n              size: 200,\n              qrStyle: \"squares\",\n              logoImage: \"https://via.placeholder.com/30\",\n              logoWidth: 50\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"ID: \", trackingId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button2 download-btn\",\n            onClick: handleDownloadCombinedImage,\n            children: [\"Download \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), trackingId && qrCodeData && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button3\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s2(AssetRegister, \"6C0FbH/GHJ1tvDFil9P2rtWwjW4=\");\n_c = AssetRegister;\nexport default AssetRegister;\nvar _c;\n$RefreshReg$(_c, \"AssetRegister\");","map":{"version":3,"names":["React","useState","useRef","useEffect","QRCode","html2canvas","axios","jsxDEV","_jsxDEV","AssetRegister","_s2","_s","$RefreshSig$","user","JSON","parse","localStorage","getItem","name","setName","username","company","setCompany","department","setDepartment","mainCategory","setMainCategory","type","setType","categories","setCategories","types","setTypes","assetName","setAssetName","assetUpdateDate","setAssetUpdateDate","serialNumber","setSerialNumber","qrCodeData","setQrCodeData","trackingId","setTrackingId","specialNote","setSpecialNote","qrCodeContainerRef","mainCategories","companies","departments","fetchCategories","filterTypes","filtered","filter","category","map","flat","generateTrackingId","companyShortCodes","Vella","departmentShortCodes","IT","HR","Kitchen","Store","Account","Audit","companyCode","departmentCode","serialSuffix","slice","date","Date","yearLast2","String","getFullYear","month","getMonth","padStart","day","getDate","Num","Math","floor","random","randomNum","handleGenerateQR","alert","uniqueTrackingId","qrData","stringify","handleSubmit","assetData","console","log","response","post","assetDat","data","message","error","handleDownloadCombinedImage","current","canvas","link","document","createElement","download","href","toDataURL","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","readOnly","Boolean","com","dep","cat","t","index","onClick","ref","size","qrStyle","logoImage","logoWidth","_c","$RefreshReg$"],"sources":["C:/projects/AssetManagmentSystemVella/assetmanagment/src/components/Admin/AssetRegistration/AssetRegister.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { QRCode } from \"react-qrcode-logo\";\r\nimport html2canvas from \"html2canvas\";\r\nimport \"./assetRegister.css\";\r\nimport axios from \"axios\";\r\n\r\nconst AssetRegister = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const [name, setName] = useState(user?.username || \"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [mainCategory, setMainCategory] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [types, setTypes] = useState([]);\r\n  const [assetName, setAssetName] = useState(\"\");\r\n  const [assetUpdateDate, setAssetUpdateDate] = useState(\"\");\r\n  const [serialNumber, setSerialNumber] = useState(\"\");\r\n  const [qrCodeData, setQrCodeData] = useState(null);\r\n  const [trackingId, setTrackingId] = useState(\"\");\r\n  const [specialNote, setSpecialNote] = useState(\"\");\r\n\r\n  const qrCodeContainerRef = useRef();\r\n\r\n  const mainCategories = [\r\n    \"Electronic items\",\r\n    \"Laundry & Linen\",\r\n    \"Housekeeping Supplies\",\r\n    \"Electrical items\",\r\n    \"Security & Safety\",\r\n    \"Furniture\",\r\n    \"Outdoor & Garden Equipment\",\r\n    \"Stationery\",\r\n  ];\r\n\r\n  const companies = [\"Vella\", \"98 Acers\", \"Ravana Pool Club\", \"Flying Ravana\", \"Le Maas Tota\", \"Tea Factory\"];\r\n  const departments = [\"IT\", \"HR\", \"Kitchen\", \"Front Office\", \"Store\", \"Account\", \"Audit\"];\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (mainCategory) {\r\n      filterTypes();\r\n    } else {\r\n      setTypes([]);\r\n    }\r\n  }, [mainCategory, categories]);\r\n\r\n  const fetchCategories = async () => {\r\n  \r\n\r\n  const filterTypes = () => {\r\n    if (mainCategory) {\r\n      const filtered = categories\r\n        .filter((category) => category.category === mainCategory)\r\n        .map((category) => category.types)\r\n        .flat();\r\n      setTypes(filtered);\r\n    }\r\n  };\r\n\r\n  const generateTrackingId = () => {\r\n    const companyShortCodes = {\r\n      Vella: \"VE\",\r\n      \"98 Acers\": \"98\",\r\n      \"Ravana Pool Club\": \"RPC\",\r\n      \"Flying Ravana\": \"FR\",\r\n      \"Le Maas Tota\": \"LMT\",\r\n      \"Tea Factory\": \"TF\",\r\n    };\r\n\r\n    const departmentShortCodes = {\r\n      IT: \"IT\",\r\n      HR: \"HR\",\r\n      Kitchen: \"KT\",\r\n      Store: \"ST\",\r\n      \"Front Office\": \"FO\",\r\n      Account: \"AC\",\r\n      Audit: \"AU\",\r\n    };\r\n\r\n    const companyCode = companyShortCodes[company] || \"XX\";\r\n    const departmentCode = departmentShortCodes[department] || \"XX\";\r\n    let serialSuffix = \"\";\r\n\r\n    if (mainCategory === \"Electronic items\" && serialNumber) {\r\n      serialSuffix = serialNumber.slice(-4); // Get last 4 characters of Serial Number\r\n    }\r\n\r\n    const date = new Date();\r\n    const yearLast2 = String(date.getFullYear()).slice(-2); // Last 2 digits of the year\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Month (2 digits)\r\n    const day = String(date.getDate()).padStart(2, '0'); // Day (2 digits)\r\n    const Num = String(Math.floor(Math.random() * 100)).padStart(2, '0'); // 2 random digits\r\n\r\n    const randomNum = `${yearLast2}${month}${day}${Num}`;\r\n\r\n    if (serialNumber) {\r\n      return `${companyCode}-${departmentCode}-${serialSuffix}`;\r\n    }\r\n\r\n    return `${companyCode}-${departmentCode}-${randomNum}`;\r\n  };\r\n\r\n  const handleGenerateQR = () => {\r\n    if (!name || !company || !department || !mainCategory || !assetName || !assetUpdateDate || !type) {\r\n      alert(\"Please fill in all fields before generating the QR code.\");\r\n      return;\r\n    }\r\n\r\n    if (mainCategory === \"Electronic items\" && !serialNumber) {\r\n      alert(\"Please enter a Serial Number for Electronics.\");\r\n      return;\r\n    }\r\n\r\n    const uniqueTrackingId = generateTrackingId();\r\n    setTrackingId(uniqueTrackingId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (trackingId) {\r\n      const qrData = JSON.stringify({\r\n        name,\r\n        company,\r\n        department,\r\n        mainCategory,\r\n        assetName,\r\n        type,\r\n        assetUpdateDate,\r\n        serialNumber: mainCategory === \"Electronic items\" ? serialNumber : null,\r\n        trackingId,\r\n      });\r\n\r\n      setQrCodeData(qrData);\r\n    }\r\n  }, [trackingId]);\r\n\r\n  const handleSubmit = () => {\r\n    if (!name || !company || !department || !mainCategory || !assetName || !assetUpdateDate || !type) {\r\n      alert(\"Please fill in all fields before submitting.\");\r\n      return;\r\n    }\r\n\r\n    if (mainCategory === \"Electronic items\" && !serialNumber) {\r\n      alert(\"Please enter a Serial Number for Electronics.\");\r\n      return;\r\n    }\r\n\r\n    if (!trackingId || !qrCodeData) {\r\n      alert(\"Please generate a Tracking ID and QR Code before submitting.\");\r\n      return;\r\n    }\r\n\r\n    const assetData = {\r\n      name,\r\n      company,\r\n      department,\r\n      mainCategory,\r\n      type,\r\n      assetName,\r\n      assetUpdateDate,\r\n      serialNumber: mainCategory === \"Electronic items\" ? serialNumber : null,\r\n      trackingId,\r\n      specialNote,\r\n    };\r\n\r\n    console.log(\"Asset Data: \", assetData);\r\n    alert(\"Asset Registered Successfully!\");\r\n\r\n    setCompany(\"\");\r\n    setDepartment(\"\");\r\n    setMainCategory(\"\");\r\n    setType(\"\");\r\n    setAssetName(\"\");\r\n    setAssetUpdateDate(\"\");\r\n    setSerialNumber(\"\");\r\n    setQrCodeData(null);\r\n    setTrackingId(\"\");\r\n    setSpecialNote(\"\");\r\n\r\n  };\r\n\r\n  try {\r\n    const response = await axios.post(\"http://localhost:8000/api/AssetRegisterDetails\",assetDat);\r\n    alert(response.data.message); // Success message\r\n    // Reset form\r\n    setCompany(\"\");\r\n    setDepartment(\"\");\r\n    setMainCategory(\"\");\r\n    setType(\"\");\r\n    setAssetName(\"\");\r\n    setAssetUpdateDate(\"\");\r\n    setSerialNumber(\"\");\r\n    setQrCodeData(null);\r\n    setTrackingId(\"\");\r\n    setSpecialNote(\"\");\r\n\r\n  } catch (error) {\r\n    console.error(\"Error submitting data:\", error);\r\n    alert(\"Error creating category. Please try again.\");\r\n  }\r\n};\r\n\r\n  const handleDownloadCombinedImage = async () => {\r\n    try {\r\n      if (!qrCodeContainerRef.current) return;\r\n\r\n      const canvas = await html2canvas(qrCodeContainerRef.current);\r\n      const link = document.createElement(\"a\");\r\n      link.download = \"QRCodeWithTrackingID.png\";\r\n      link.href = canvas.toDataURL(\"image/png\");\r\n      link.click();\r\n    } catch (error) {\r\n      console.error(\"Failed to download the QR code image:\", error);\r\n      alert(\"Error occurred while downloading the QR code. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"asset-register\">\r\n      <div className=\"form-container\">\r\n        <h2>Asset Registration</h2>\r\n        <div className=\"input-box\">\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            placeholder=\"Enter your Name\"\r\n            readOnly={Boolean(user)}\r\n          />\r\n          <select value={company} onChange={(e) => setCompany(e.target.value)}>\r\n            <option value=\"\">Select Company</option>\r\n            {companies.map((com) => (\r\n              <option key={com} value={com}>{com}</option>\r\n            ))}\r\n          </select>\r\n\r\n          <select value={department} onChange={(e) => setDepartment(e.target.value)}>\r\n            <option value=\"\">Select Department</option>\r\n            {departments.map((dep) => (\r\n              <option key={dep} value={dep}>{dep}</option>\r\n            ))}\r\n          </select>\r\n\r\n          <select value={mainCategory} onChange={(e) => setMainCategory(e.target.value)}>\r\n            <option value=\"\">Select Category</option>\r\n            {mainCategories.map((cat) => (\r\n              <option key={cat} value={cat}>{cat}</option>\r\n            ))}\r\n          </select>\r\n\r\n          {mainCategory && (\r\n            <select value={type} onChange={(e) => setType(e.target.value)}>\r\n              <option value=\"\">Select Type</option>\r\n              {types.map((t, index) => (\r\n                <option key={index} value={t}>{t}</option>\r\n              ))}\r\n            </select>\r\n          )}\r\n\r\n          <input\r\n            type=\"text\"\r\n            value={assetName}\r\n            onChange={(e) => setAssetName(e.target.value)}\r\n            placeholder=\"Enter Asset Name\"\r\n          />\r\n\r\n          {mainCategory === \"Electronic items\" && (\r\n            <input\r\n              type=\"text\"\r\n              value={serialNumber}\r\n              onChange={(e) => setSerialNumber(e.target.value)}\r\n              placeholder=\"Enter Serial Number\"\r\n            />\r\n          )}\r\n\r\n          <input\r\n            type=\"date\"\r\n            value={assetUpdateDate}\r\n            onChange={(e) => setAssetUpdateDate(e.target.value)}\r\n          />\r\n          <input\r\n  type=\"text\"\r\n  value={specialNote}\r\n  onChange={(e) => setSpecialNote(e.target.value)}\r\n  placeholder=\"Enter Special Note (Optional)\"\r\n/>\r\n\r\n\r\n          <div className=\"button-group\">\r\n            <button className=\"button generate-btn\" onClick={handleGenerateQR}>Generate QR</button>\r\n          </div>\r\n\r\n          {trackingId && qrCodeData && (\r\n            <div className=\"qr-container\">\r\n              <h3>Generated QR Code</h3>\r\n              <div ref={qrCodeContainerRef} className=\"combined-qr-container\">\r\n                <QRCode\r\n                  value={qrCodeData}\r\n                  size={200} \r\n                  qrStyle=\"squares\"\r\n                  logoImage=\"https://via.placeholder.com/30\"\r\n                  logoWidth={50}\r\n                   \r\n                />\r\n                <p>ID: {trackingId}</p>\r\n              </div>\r\n\r\n              <button className=\"button2 download-btn\" onClick={handleDownloadCombinedImage}>\r\n                Download <i className=\"fas fa-download\"></i>\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {trackingId && qrCodeData && (\r\n            <button className=\"button3\" onClick={handleSubmit}>Submit</button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssetRegister;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}