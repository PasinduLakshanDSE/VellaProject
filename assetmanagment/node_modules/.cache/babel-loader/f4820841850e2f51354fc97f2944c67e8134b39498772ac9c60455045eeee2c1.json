{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\AssetManagmentSystem\\\\assetmanagment\\\\src\\\\components\\\\Admin\\\\AssetCategorization\\\\Assetcategorization.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './assetCategorization.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Categorization = () => {\n  _s();\n  const [category, setCategory] = useState(\"\"); // Initialize state for 'category'\n  const [customCategory, setCustomCategory] = useState(\"\"); // Custom category\n  const [types, setTypes] = useState(\"\"); // Initialize state for 'types'\n  const [customType, setCustomType] = useState(\"\"); // Custom type\n\n  const categories = [\"Electronics\", \"Furniture\", \"Stationery\", \"Other\"];\n\n  // Define types based on the selected category\n  const getTypesByCategory = category => {\n    switch (category) {\n      case \"Electronics\":\n        return [\"Computer\", \"Laptop\", \"Mobile Phone\", \"UPS\", \"Other\"];\n      case \"Furniture\":\n        return [\"Table\", \"Chair\", \"Sofa\", \"Cupboard\", \"Other\"];\n      case \"Stationery\":\n        return [\"Pen\", \"Notebook\", \"Marker\", \"Stapler\", \"Other\"];\n      default:\n        return [];\n    }\n  };\n  const typesList = getTypesByCategory(category);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"asset-categorization\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Asset Categorization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: category,\n            onChange: e => {\n              setCategory(e.target.value); // Update category\n              setTypes(\"\"); // Reset types when category changes\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), category === \"Other\" && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: customCategory,\n            onChange: e => setCustomCategory(e.target.value) // Update custom category\n            ,\n            placeholder: \"Enter Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), category && /*#__PURE__*/_jsxDEV(\"select\", {\n            value: types,\n            onChange: e => setTypes(e.target.value) // Update types\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), typesList.map(typ => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: typ,\n              children: typ\n            }, typ, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), types === \"Other\" && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: customType,\n            onChange: e => setCustomType(e.target.value) // Update custom type\n            ,\n            placeholder: \"Enter Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), types == \"Computer\" && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            className: \"radio\",\n            name: `technician-${service.name}`,\n            value: technician,\n            checked: selectedTechnicians[service.name] === technician,\n            onChange: () => handleTechnicianSelection(service.name, technician)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Categorization, \"fHvhryaWlLX7jBwwZwU7dNxjSmk=\");\n_c = Categorization;\nexport default Categorization;\nvar _c;\n$RefreshReg$(_c, \"Categorization\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Categorization","_s","category","setCategory","customCategory","setCustomCategory","types","setTypes","customType","setCustomType","categories","getTypesByCategory","typesList","children","className","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","cat","type","placeholder","typ","name","service","technician","checked","selectedTechnicians","handleTechnicianSelection","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/AssetManagmentSystem/assetmanagment/src/components/Admin/AssetCategorization/Assetcategorization.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './assetCategorization.css';\r\n\r\nconst Categorization = () => {\r\n  const [category, setCategory] = useState(\"\"); // Initialize state for 'category'\r\n  const [customCategory, setCustomCategory] = useState(\"\"); // Custom category\r\n  const [types, setTypes] = useState(\"\"); // Initialize state for 'types'\r\n  const [customType, setCustomType] = useState(\"\"); // Custom type\r\n\r\n  const categories = [\"Electronics\", \"Furniture\", \"Stationery\", \"Other\"];\r\n  \r\n  // Define types based on the selected category\r\n  const getTypesByCategory = (category) => {\r\n    switch (category) {\r\n      case \"Electronics\":\r\n        return [\"Computer\", \"Laptop\", \"Mobile Phone\", \"UPS\", \"Other\"];\r\n      case \"Furniture\":\r\n        return [\"Table\", \"Chair\", \"Sofa\", \"Cupboard\", \"Other\"];\r\n      case \"Stationery\":\r\n        return [\"Pen\", \"Notebook\", \"Marker\", \"Stapler\", \"Other\"];\r\n      default:\r\n        return [];\r\n    }\r\n  };\r\n\r\n  const typesList = getTypesByCategory(category);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"asset-categorization\">\r\n        <div className=\"form-container\">\r\n          <h2>Asset Categorization</h2>\r\n          <div className=\"input-box\">\r\n            {/* Category Dropdown */}\r\n            <select\r\n              value={category}\r\n              onChange={(e) => {\r\n                setCategory(e.target.value); // Update category\r\n                setTypes(\"\"); // Reset types when category changes\r\n              }}\r\n            >\r\n              <option value=\"\">Select Category</option>\r\n              {categories.map((cat) => (\r\n                <option key={cat} value={cat}>\r\n                  {cat}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {category === \"Other\" && (\r\n              <input\r\n                type=\"text\"\r\n                value={customCategory}\r\n                onChange={(e) => setCustomCategory(e.target.value)} // Update custom category\r\n                placeholder=\"Enter Category\"\r\n              />\r\n            )}\r\n\r\n            {/* Type Dropdown */}\r\n            {category && (\r\n              <select\r\n                value={types}\r\n                onChange={(e) => setTypes(e.target.value)} // Update types\r\n              >\r\n                <option value=\"\">Select Type</option>\r\n                {typesList.map((typ) => (\r\n                  <option key={typ} value={typ}>\r\n                    {typ}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            )}\r\n            {types === \"Other\" && (\r\n              <input\r\n                type=\"text\"\r\n                value={customType}\r\n                onChange={(e) => setCustomType(e.target.value)} // Update custom type\r\n                placeholder=\"Enter Type\"\r\n              />\r\n            )}\r\n\r\n            {types == \"Computer\" && (\r\n                <input\r\n                type=\"radio\"\r\n                \r\n                className=\"radio\"\r\n                name={`technician-${service.name}`}\r\n                value={technician}\r\n                checked={selectedTechnicians[service.name] === technician}\r\n                onChange={() =>\r\n                  handleTechnicianSelection(service.name, technician)\r\n                }\r\n              />\r\n            )} \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categorization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}