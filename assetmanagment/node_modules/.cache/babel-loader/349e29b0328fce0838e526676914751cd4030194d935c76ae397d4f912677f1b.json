{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\AssetManagmentSystem\\\\assetmanagment\\\\src\\\\components\\\\Admin\\\\AssetCategorization\\\\Assetcategorization.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./assetCategorization.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Categorization = () => {\n  _s();\n  const [category, setCategory] = useState(\"\"); // State for selected category\n  const [customCategory, setCustomCategory] = useState(\"\"); // Custom category input\n  const [types, setTypes] = useState(\"\"); // State for selected type\n  const [customType, setCustomType] = useState(\"\"); // Custom type input\n  const [selectedParts, setSelectedParts] = useState([]); // State for selected computer parts\n\n  const categories = [\"Electronics\", \"Furniture\", \"Stationery\", \"Other\"];\n\n  // Define types based on the selected category\n  const getTypesByCategory = category => {\n    switch (category) {\n      case \"Electronics\":\n        return [\"Computer\", \"Laptop\", \"Mobile Phone\", \"UPS\", \"Other\"];\n      case \"Furniture\":\n        return [\"Table\", \"Chair\", \"Sofa\", \"Cupboard\", \"Other\"];\n      case \"Stationery\":\n        return [\"Pen\", \"Notebook\", \"Marker\", \"Stapler\", \"Other\"];\n      default:\n        return [];\n    }\n  };\n  const typesList = getTypesByCategory(category);\n\n  // Define computer parts for selection\n  const computerParts = [\"Full Pack\", \"Monitor\", \"Mouse\"];\n\n  // Handle checkbox changes\n  const handlePartsChange = part => {\n    setSelectedParts(prevSelectedParts => prevSelectedParts.includes(part) ? prevSelectedParts.filter(p => p !== part) // Remove if already selected\n    : [...prevSelectedParts, part] // Add if not selected\n    );\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"asset-categorization\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Asset Categorization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: category,\n            onChange: e => {\n              setCategory(e.target.value); // Update category\n              setTypes(\"\"); // Reset types when category changes\n              setSelectedParts([]); // Reset selected parts\n              setCustomCategory(\"\"); // Reset custom category\n              setCustomType(\"\"); // Reset custom type\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), category === \"Other\" && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: customCategory,\n            onChange: e => setCustomCategory(e.target.value),\n            placeholder: \"Enter Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), category === \"Other\" && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: customType,\n            onChange: e => setCustomType(e.target.value),\n            placeholder: \"Enter Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), category && /*#__PURE__*/_jsxDEV(\"select\", {\n            value: types,\n            onChange: e => {\n              setTypes(e.target.value);\n              setCustomType(\"\"); // Reset custom type when type changes\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), typesList.map(typ => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: typ,\n              children: typ\n            }, typ, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), types === \"Other\" && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: customType,\n            onChange: e => setCustomType(e.target.value),\n            placeholder: \"Enter Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), types === \"Computer\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Select Computer Parts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), computerParts.map(part => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                value: part,\n                checked: selectedParts.includes(part),\n                onChange: () => handlePartsChange(part)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: part\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this)]\n            }, part, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Categorization, \"3KpyYYlkpxZyUQNtNKqrcV9K2Yk=\");\n_c = Categorization;\nexport default Categorization;\nvar _c;\n$RefreshReg$(_c, \"Categorization\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Categorization","_s","category","setCategory","customCategory","setCustomCategory","types","setTypes","customType","setCustomType","selectedParts","setSelectedParts","categories","getTypesByCategory","typesList","computerParts","handlePartsChange","part","prevSelectedParts","includes","filter","p","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","cat","type","placeholder","typ","checked","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/AssetManagmentSystem/assetmanagment/src/components/Admin/AssetCategorization/Assetcategorization.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./assetCategorization.css\";\r\n\r\nconst Categorization = () => {\r\n  const [category, setCategory] = useState(\"\"); // State for selected category\r\n  const [customCategory, setCustomCategory] = useState(\"\"); // Custom category input\r\n  const [types, setTypes] = useState(\"\"); // State for selected type\r\n  const [customType, setCustomType] = useState(\"\"); // Custom type input\r\n  const [selectedParts, setSelectedParts] = useState([]); // State for selected computer parts\r\n\r\n  const categories = [\"Electronics\", \"Furniture\", \"Stationery\", \"Other\"];\r\n\r\n  // Define types based on the selected category\r\n  const getTypesByCategory = (category) => {\r\n    switch (category) {\r\n      case \"Electronics\":\r\n        return [\"Computer\", \"Laptop\", \"Mobile Phone\", \"UPS\", \"Other\"];\r\n      case \"Furniture\":\r\n        return [\"Table\", \"Chair\", \"Sofa\", \"Cupboard\", \"Other\"];\r\n      case \"Stationery\":\r\n        return [\"Pen\", \"Notebook\", \"Marker\", \"Stapler\", \"Other\"];\r\n      default:\r\n        return [];\r\n    }\r\n  };\r\n\r\n  const typesList = getTypesByCategory(category);\r\n\r\n  // Define computer parts for selection\r\n  const computerParts = [\"Full Pack\", \"Monitor\", \"Mouse\"];\r\n\r\n  // Handle checkbox changes\r\n  const handlePartsChange = (part) => {\r\n    setSelectedParts((prevSelectedParts) =>\r\n      prevSelectedParts.includes(part)\r\n        ? prevSelectedParts.filter((p) => p !== part) // Remove if already selected\r\n        : [...prevSelectedParts, part] // Add if not selected\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <div className=\"asset-categorization\">\r\n        <div className=\"form-container\">\r\n          <h2>Asset Categorization</h2>\r\n          <div className=\"input-box\">\r\n            {/* Category Dropdown */}\r\n            <select\r\n              value={category}\r\n              onChange={(e) => {\r\n                setCategory(e.target.value); // Update category\r\n                setTypes(\"\"); // Reset types when category changes\r\n                setSelectedParts([]); // Reset selected parts\r\n                setCustomCategory(\"\"); // Reset custom category\r\n                setCustomType(\"\"); // Reset custom type\r\n              }}\r\n            >\r\n              <option value=\"\">Select Category</option>\r\n              {categories.map((cat) => (\r\n                <option key={cat} value={cat}>\r\n                  {cat}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            {/* Input for custom category */}\r\n            {category === \"Other\" && (\r\n              <input\r\n                type=\"text\"\r\n                value={customCategory}\r\n                onChange={(e) => setCustomCategory(e.target.value)}\r\n                placeholder=\"Enter Category\"\r\n              />\r\n            )}\r\n             {category === \"Other\" && (\r\n              <input\r\n                type=\"text\"\r\n                value={customType}\r\n                onChange={(e) => setCustomType(e.target.value)}\r\n                placeholder=\"Enter Type\"\r\n              />\r\n            )}\r\n\r\n            {/* Type Dropdown */}\r\n            {category && (\r\n              <select\r\n                value={types}\r\n                onChange={(e) => {\r\n                  setTypes(e.target.value);\r\n                  setCustomType(\"\"); // Reset custom type when type changes\r\n                }}\r\n              >\r\n                <option value=\"\">Select Type</option>\r\n                {typesList.map((typ) => (\r\n                  <option key={typ} value={typ}>\r\n                    {typ}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            )}\r\n\r\n            {/* Input for custom type */}\r\n            {types === \"Other\" && (\r\n              <input\r\n                type=\"text\"\r\n                value={customType}\r\n                onChange={(e) => setCustomType(e.target.value)}\r\n                placeholder=\"Enter Type\"\r\n              />\r\n            )}\r\n\r\n            {/* Display checkboxes for computer parts */}\r\n            {types === \"Computer\" && (\r\n              <div className=\"checkbox-group\">\r\n                <h3>Select Computer Parts</h3>\r\n                {computerParts.map((part) => (\r\n                  <div key={part}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value={part}\r\n                      checked={selectedParts.includes(part)}\r\n                      onChange={() => handlePartsChange(part)}\r\n                    />\r\n                    <label>{part}</label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categorization;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExD,MAAMe,UAAU,GAAG,CAAC,aAAa,EAAE,WAAW,EAAE,YAAY,EAAE,OAAO,CAAC;;EAEtE;EACA,MAAMC,kBAAkB,GAAIX,QAAQ,IAAK;IACvC,QAAQA,QAAQ;MACd,KAAK,aAAa;QAChB,OAAO,CAAC,UAAU,EAAE,QAAQ,EAAE,cAAc,EAAE,KAAK,EAAE,OAAO,CAAC;MAC/D,KAAK,WAAW;QACd,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC;MACxD,KAAK,YAAY;QACf,OAAO,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC;MAC1D;QACE,OAAO,EAAE;IACb;EACF,CAAC;EAED,MAAMY,SAAS,GAAGD,kBAAkB,CAACX,QAAQ,CAAC;;EAE9C;EACA,MAAMa,aAAa,GAAG,CAAC,WAAW,EAAE,SAAS,EAAE,OAAO,CAAC;;EAEvD;EACA,MAAMC,iBAAiB,GAAIC,IAAI,IAAK;IAClCN,gBAAgB,CAAEO,iBAAiB,IACjCA,iBAAiB,CAACC,QAAQ,CAACF,IAAI,CAAC,GAC5BC,iBAAiB,CAACE,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKJ,IAAI,CAAC,CAAC;IAAA,EAC5C,CAAC,GAAGC,iBAAiB,EAAED,IAAI,CAAC,CAAC;IACnC,CAAC;EACH,CAAC;EAED,oBACElB,OAAA;IAAKuB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBxB,OAAA;MAAKuB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eACnCxB,OAAA;QAAKuB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BxB,OAAA;UAAAwB,QAAA,EAAI;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7B5B,OAAA;UAAKuB,SAAS,EAAC,WAAW;UAAAC,QAAA,gBAExBxB,OAAA;YACE6B,KAAK,EAAE1B,QAAS;YAChB2B,QAAQ,EAAGC,CAAC,IAAK;cACf3B,WAAW,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAAC,CAAC;cAC7BrB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;cACdI,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;cACtBN,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;cACvBI,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;YACrB,CAAE;YAAAc,QAAA,gBAEFxB,OAAA;cAAQ6B,KAAK,EAAC,EAAE;cAAAL,QAAA,EAAC;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACxCf,UAAU,CAACoB,GAAG,CAAEC,GAAG,iBAClBlC,OAAA;cAAkB6B,KAAK,EAAEK,GAAI;cAAAV,QAAA,EAC1BU;YAAG,GADOA,GAAG;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAER,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC,EAGRzB,QAAQ,KAAK,OAAO,iBACnBH,OAAA;YACEmC,IAAI,EAAC,MAAM;YACXN,KAAK,EAAExB,cAAe;YACtByB,QAAQ,EAAGC,CAAC,IAAKzB,iBAAiB,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YACnDO,WAAW,EAAC;UAAgB;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CACF,EACCzB,QAAQ,KAAK,OAAO,iBACpBH,OAAA;YACEmC,IAAI,EAAC,MAAM;YACXN,KAAK,EAAEpB,UAAW;YAClBqB,QAAQ,EAAGC,CAAC,IAAKrB,aAAa,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC/CO,WAAW,EAAC;UAAY;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CACF,EAGAzB,QAAQ,iBACPH,OAAA;YACE6B,KAAK,EAAEtB,KAAM;YACbuB,QAAQ,EAAGC,CAAC,IAAK;cACfvB,QAAQ,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;cACxBnB,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;YACrB,CAAE;YAAAc,QAAA,gBAEFxB,OAAA;cAAQ6B,KAAK,EAAC,EAAE;cAAAL,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACpCb,SAAS,CAACkB,GAAG,CAAEI,GAAG,iBACjBrC,OAAA;cAAkB6B,KAAK,EAAEQ,GAAI;cAAAb,QAAA,EAC1Ba;YAAG,GADOA,GAAG;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAER,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CACT,EAGArB,KAAK,KAAK,OAAO,iBAChBP,OAAA;YACEmC,IAAI,EAAC,MAAM;YACXN,KAAK,EAAEpB,UAAW;YAClBqB,QAAQ,EAAGC,CAAC,IAAKrB,aAAa,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC/CO,WAAW,EAAC;UAAY;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CACF,EAGArB,KAAK,KAAK,UAAU,iBACnBP,OAAA;YAAKuB,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7BxB,OAAA;cAAAwB,QAAA,EAAI;YAAqB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAC7BZ,aAAa,CAACiB,GAAG,CAAEf,IAAI,iBACtBlB,OAAA;cAAAwB,QAAA,gBACExB,OAAA;gBACEmC,IAAI,EAAC,UAAU;gBACfN,KAAK,EAAEX,IAAK;gBACZoB,OAAO,EAAE3B,aAAa,CAACS,QAAQ,CAACF,IAAI,CAAE;gBACtCY,QAAQ,EAAEA,CAAA,KAAMb,iBAAiB,CAACC,IAAI;cAAE;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzC,CAAC,eACF5B,OAAA;gBAAAwB,QAAA,EAAQN;cAAI;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,GAPbV,IAAI;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQT,CACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAlIID,cAAc;AAAAsC,EAAA,GAAdtC,cAAc;AAoIpB,eAAeA,cAAc;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}