{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QRCode = void 0;\nvar isEqual = require(\"lodash.isequal\");\nvar qrGenerator = require(\"qrcode-generator\");\nvar React = require(\"react\");\nvar QRCode = /** @class */function (_super) {\n  __extends(QRCode, _super);\n  function QRCode(props) {\n    var _this = _super.call(this, props) || this;\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n  QRCode.prototype.download = function (fileType, fileName) {\n    if (this.canvasRef.current) {\n      var mimeType = void 0;\n      switch (fileType) {\n        case 'jpg':\n          mimeType = 'image/jpeg';\n          break;\n        case 'webp':\n          mimeType = 'image/webp';\n          break;\n        case 'png':\n        default:\n          mimeType = 'image/png';\n          break;\n      }\n      var url = this.canvasRef.current.toDataURL(mimeType, 1.0);\n      var link = document.createElement('a');\n      link.download = fileName !== null && fileName !== void 0 ? fileName : 'react-qrcode-logo';\n      link.href = url;\n      link.click();\n    }\n  };\n  QRCode.prototype.utf16to8 = function (str) {\n    var out = '',\n      i,\n      c;\n    var len = str.length;\n    for (i = 0; i < len; i++) {\n      c = str.charCodeAt(i);\n      if (c >= 0x0001 && c <= 0x007F) {\n        out += str.charAt(i);\n      } else if (c > 0x07FF) {\n        out += String.fromCharCode(0xE0 | c >> 12 & 0x0F);\n        out += String.fromCharCode(0x80 | c >> 6 & 0x3F);\n        out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n      } else {\n        out += String.fromCharCode(0xC0 | c >> 6 & 0x1F);\n        out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n      }\n    }\n    return out;\n  };\n  /**\n   * Draw a rounded square in the canvas\n   */\n  QRCode.prototype.drawRoundedSquare = function (lineWidth, x, y, size, color, radii, fill, ctx) {\n    ctx.lineWidth = lineWidth;\n    ctx.fillStyle = color;\n    ctx.strokeStyle = color;\n    // Adjust coordinates so that the outside of the stroke is aligned to the edges\n    y += lineWidth / 2;\n    x += lineWidth / 2;\n    size -= lineWidth;\n    if (!Array.isArray(radii)) {\n      radii = [radii, radii, radii, radii];\n    }\n    // Radius should not be greater than half the size or less than zero\n    radii = radii.map(function (r) {\n      r = Math.min(r, size / 2);\n      return r < 0 ? 0 : r;\n    });\n    var rTopLeft = radii[0] || 0;\n    var rTopRight = radii[1] || 0;\n    var rBottomRight = radii[2] || 0;\n    var rBottomLeft = radii[3] || 0;\n    ctx.beginPath();\n    ctx.moveTo(x + rTopLeft, y);\n    ctx.lineTo(x + size - rTopRight, y);\n    if (rTopRight) ctx.quadraticCurveTo(x + size, y, x + size, y + rTopRight);\n    ctx.lineTo(x + size, y + size - rBottomRight);\n    if (rBottomRight) ctx.quadraticCurveTo(x + size, y + size, x + size - rBottomRight, y + size);\n    ctx.lineTo(x + rBottomLeft, y + size);\n    if (rBottomLeft) ctx.quadraticCurveTo(x, y + size, x, y + size - rBottomLeft);\n    ctx.lineTo(x, y + rTopLeft);\n    if (rTopLeft) ctx.quadraticCurveTo(x, y, x + rTopLeft, y);\n    ctx.closePath();\n    ctx.stroke();\n    if (fill) {\n      ctx.fill();\n    }\n  };\n  /**\n   * Draw a single positional pattern eye.\n   */\n  QRCode.prototype.drawPositioningPattern = function (ctx, cellSize, offset, row, col, color, radii) {\n    if (radii === void 0) {\n      radii = [0, 0, 0, 0];\n    }\n    var lineWidth = Math.ceil(cellSize);\n    var radiiOuter;\n    var radiiInner;\n    if (typeof radii !== 'number' && !Array.isArray(radii)) {\n      radiiOuter = radii.outer || 0;\n      radiiInner = radii.inner || 0;\n    } else {\n      radiiOuter = radii;\n      radiiInner = radiiOuter;\n    }\n    var colorOuter;\n    var colorInner;\n    if (typeof color !== 'string') {\n      colorOuter = color.outer;\n      colorInner = color.inner;\n    } else {\n      colorOuter = color;\n      colorInner = color;\n    }\n    var y = row * cellSize + offset;\n    var x = col * cellSize + offset;\n    var size = cellSize * 7;\n    // Outer box\n    this.drawRoundedSquare(lineWidth, x, y, size, colorOuter, radiiOuter, false, ctx);\n    // Inner box\n    size = cellSize * 3;\n    y += cellSize * 2;\n    x += cellSize * 2;\n    this.drawRoundedSquare(lineWidth, x, y, size, colorInner, radiiInner, true, ctx);\n  };\n  ;\n  /**\n   * Is this dot inside a positional pattern zone.\n   */\n  QRCode.prototype.isInPositioninZone = function (col, row, zones) {\n    return zones.some(function (zone) {\n      return row >= zone.row && row <= zone.row + 7 && col >= zone.col && col <= zone.col + 7;\n    });\n  };\n  QRCode.prototype.transformPixelLengthIntoNumberOfCells = function (pixelLength, cellSize) {\n    return pixelLength / cellSize;\n  };\n  QRCode.prototype.isCoordinateInImage = function (col, row, dWidthLogo, dHeightLogo, dxLogo, dyLogo, cellSize, logoImage) {\n    if (logoImage) {\n      var numberOfCellsMargin = 2;\n      var firstRowOfLogo = this.transformPixelLengthIntoNumberOfCells(dxLogo, cellSize);\n      var firstColumnOfLogo = this.transformPixelLengthIntoNumberOfCells(dyLogo, cellSize);\n      var logoWidthInCells = this.transformPixelLengthIntoNumberOfCells(dWidthLogo, cellSize) - 1;\n      var logoHeightInCells = this.transformPixelLengthIntoNumberOfCells(dHeightLogo, cellSize) - 1;\n      return row >= firstRowOfLogo - numberOfCellsMargin && row <= firstRowOfLogo + logoWidthInCells + numberOfCellsMargin // check rows\n      && col >= firstColumnOfLogo - numberOfCellsMargin && col <= firstColumnOfLogo + logoHeightInCells + numberOfCellsMargin; // check cols\n    } else {\n      return false;\n    }\n  };\n  QRCode.prototype.shouldComponentUpdate = function (nextProps) {\n    return !isEqual(this.props, nextProps);\n  };\n  QRCode.prototype.componentDidMount = function () {\n    this.update();\n  };\n  QRCode.prototype.componentDidUpdate = function () {\n    this.update();\n  };\n  QRCode.prototype.update = function () {\n    var _a;\n    var _b = this.props,\n      value = _b.value,\n      ecLevel = _b.ecLevel,\n      enableCORS = _b.enableCORS,\n      bgColor = _b.bgColor,\n      fgColor = _b.fgColor,\n      logoImage = _b.logoImage,\n      logoOpacity = _b.logoOpacity,\n      logoOnLoad = _b.logoOnLoad,\n      removeQrCodeBehindLogo = _b.removeQrCodeBehindLogo,\n      qrStyle = _b.qrStyle,\n      eyeRadius = _b.eyeRadius,\n      eyeColor = _b.eyeColor,\n      logoPaddingStyle = _b.logoPaddingStyle;\n    // just make sure that these params are passed as numbers\n    var size = +this.props.size;\n    var quietZone = +this.props.quietZone;\n    var logoWidth = this.props.logoWidth ? +this.props.logoWidth : 0;\n    var logoHeight = this.props.logoHeight ? +this.props.logoHeight : 0;\n    var logoPadding = this.props.logoPadding ? +this.props.logoPadding : 0;\n    var qrCode = qrGenerator(0, ecLevel);\n    qrCode.addData(this.utf16to8(value));\n    qrCode.make();\n    var canvas = (_a = this.canvasRef) === null || _a === void 0 ? void 0 : _a.current;\n    var ctx = canvas.getContext('2d');\n    var canvasSize = size + 2 * quietZone;\n    var length = qrCode.getModuleCount();\n    var cellSize = size / length;\n    var scale = window.devicePixelRatio || 1;\n    canvas.height = canvas.width = canvasSize * scale;\n    ctx.scale(scale, scale);\n    ctx.fillStyle = bgColor;\n    ctx.fillRect(0, 0, canvasSize, canvasSize);\n    var offset = quietZone;\n    var positioningZones = [{\n      row: 0,\n      col: 0\n    }, {\n      row: 0,\n      col: length - 7\n    }, {\n      row: length - 7,\n      col: 0\n    }];\n    ctx.strokeStyle = fgColor;\n    if (qrStyle === 'dots') {\n      ctx.fillStyle = fgColor;\n      var radius = cellSize / 2;\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones)) {\n            ctx.beginPath();\n            ctx.arc(Math.round(col * cellSize) + radius + offset, Math.round(row * cellSize) + radius + offset, radius / 100 * 75, 0, 2 * Math.PI, false);\n            ctx.closePath();\n            ctx.fill();\n          }\n        }\n      }\n    } else if (qrStyle === 'fluid') {\n      var radius = Math.ceil(cellSize / 2);\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones)) {\n            var roundedCorners = [false, false, false, false]; // top-left, top-right, bottom-right, bottom-left\n            if (row > 0 && !qrCode.isDark(row - 1, col) && col > 0 && !qrCode.isDark(row, col - 1)) roundedCorners[0] = true;\n            if (row > 0 && !qrCode.isDark(row - 1, col) && col < length - 1 && !qrCode.isDark(row, col + 1)) roundedCorners[1] = true;\n            if (row < length - 1 && !qrCode.isDark(row + 1, col) && col < length - 1 && !qrCode.isDark(row, col + 1)) roundedCorners[2] = true;\n            if (row < length - 1 && !qrCode.isDark(row + 1, col) && col > 0 && !qrCode.isDark(row, col - 1)) roundedCorners[3] = true;\n            var w = Math.ceil((col + 1) * cellSize) - Math.floor(col * cellSize);\n            var h = Math.ceil((row + 1) * cellSize) - Math.floor(row * cellSize);\n            ctx.fillStyle = fgColor;\n            ctx.beginPath();\n            ctx.arc(Math.round(col * cellSize) + radius + offset, Math.round(row * cellSize) + radius + offset, radius, 0, 2 * Math.PI, false);\n            ctx.closePath();\n            ctx.fill();\n            if (!roundedCorners[0]) ctx.fillRect(Math.round(col * cellSize) + offset, Math.round(row * cellSize) + offset, w / 2, h / 2);\n            if (!roundedCorners[1]) ctx.fillRect(Math.round(col * cellSize) + offset + Math.floor(w / 2), Math.round(row * cellSize) + offset, w / 2, h / 2);\n            if (!roundedCorners[2]) ctx.fillRect(Math.round(col * cellSize) + offset + Math.floor(w / 2), Math.round(row * cellSize) + offset + Math.floor(h / 2), w / 2, h / 2);\n            if (!roundedCorners[3]) ctx.fillRect(Math.round(col * cellSize) + offset, Math.round(row * cellSize) + offset + Math.floor(h / 2), w / 2, h / 2);\n          }\n        }\n      }\n    } else {\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones)) {\n            ctx.fillStyle = fgColor;\n            var w = Math.ceil((col + 1) * cellSize) - Math.floor(col * cellSize);\n            var h = Math.ceil((row + 1) * cellSize) - Math.floor(row * cellSize);\n            ctx.fillRect(Math.round(col * cellSize) + offset, Math.round(row * cellSize) + offset, w, h);\n          }\n        }\n      }\n    }\n    // Draw positioning patterns\n    for (var i = 0; i < 3; i++) {\n      var _c = positioningZones[i],\n        row = _c.row,\n        col = _c.col;\n      var radii = eyeRadius;\n      var color = void 0;\n      if (Array.isArray(radii)) {\n        radii = radii[i];\n      }\n      if (typeof radii == 'number') {\n        radii = [radii, radii, radii, radii];\n      }\n      if (!eyeColor) {\n        // if not specified, eye color is the same as foreground, \n        color = fgColor;\n      } else {\n        if (Array.isArray(eyeColor)) {\n          // if array, we pass the single color\n          color = eyeColor[i];\n        } else {\n          color = eyeColor;\n        }\n      }\n      this.drawPositioningPattern(ctx, cellSize, offset, row, col, color, radii);\n    }\n    if (logoImage) {\n      var image_1 = new Image();\n      if (enableCORS) {\n        image_1.crossOrigin = 'Anonymous';\n      }\n      image_1.onload = function (e) {\n        ctx.save();\n        var dWidthLogo = logoWidth || size * 0.2;\n        var dHeightLogo = logoHeight || dWidthLogo;\n        var dxLogo = (size - dWidthLogo) / 2;\n        var dyLogo = (size - dHeightLogo) / 2;\n        if (removeQrCodeBehindLogo || logoPadding) {\n          ctx.beginPath();\n          ctx.strokeStyle = bgColor;\n          ctx.fillStyle = bgColor;\n          var dWidthLogoPadding = dWidthLogo + 2 * logoPadding;\n          var dHeightLogoPadding = dHeightLogo + 2 * logoPadding;\n          var dxLogoPadding = dxLogo + offset - logoPadding;\n          var dyLogoPadding = dyLogo + offset - logoPadding;\n          if (logoPaddingStyle === 'circle') {\n            var dxCenterLogoPadding = dxLogoPadding + dWidthLogoPadding / 2;\n            var dyCenterLogoPadding = dyLogoPadding + dHeightLogoPadding / 2;\n            ctx.ellipse(dxCenterLogoPadding, dyCenterLogoPadding, dWidthLogoPadding / 2, dHeightLogoPadding / 2, 0, 0, 2 * Math.PI);\n            ctx.stroke();\n            ctx.fill();\n          } else {\n            ctx.fillRect(dxLogoPadding, dyLogoPadding, dWidthLogoPadding, dHeightLogoPadding);\n          }\n        }\n        ctx.globalAlpha = logoOpacity;\n        ctx.drawImage(image_1, dxLogo + offset, dyLogo + offset, dWidthLogo, dHeightLogo);\n        ctx.restore();\n        if (logoOnLoad) {\n          logoOnLoad(e);\n        }\n      };\n      image_1.src = logoImage;\n    }\n  };\n  QRCode.prototype.render = function () {\n    var _a;\n    var qrSize = +this.props.size + 2 * +this.props.quietZone;\n    return React.createElement(\"canvas\", {\n      id: (_a = this.props.id) !== null && _a !== void 0 ? _a : 'react-qrcode-logo',\n      height: qrSize,\n      width: qrSize,\n      style: __assign({\n        height: qrSize + 'px',\n        width: qrSize + 'px'\n      }, this.props.style),\n      ref: this.canvasRef\n    });\n  };\n  QRCode.defaultProps = {\n    value: 'https://reactjs.org/',\n    ecLevel: 'M',\n    enableCORS: false,\n    size: 150,\n    quietZone: 10,\n    bgColor: '#FFFFFF',\n    fgColor: '#000000',\n    logoOpacity: 1,\n    qrStyle: 'squares',\n    eyeRadius: [0, 0, 0],\n    logoPaddingStyle: 'square'\n  };\n  return QRCode;\n}(React.Component);\nexports.QRCode = QRCode;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","defineProperty","exports","value","QRCode","isEqual","require","qrGenerator","React","_super","props","_this","canvasRef","createRef","download","fileType","fileName","current","mimeType","url","toDataURL","link","document","createElement","href","click","utf16to8","str","out","c","len","charCodeAt","charAt","fromCharCode","drawRoundedSquare","lineWidth","x","y","size","color","radii","fill","ctx","fillStyle","strokeStyle","isArray","map","r","Math","min","rTopLeft","rTopRight","rBottomRight","rBottomLeft","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","stroke","drawPositioningPattern","cellSize","offset","row","col","ceil","radiiOuter","radiiInner","outer","inner","colorOuter","colorInner","isInPositioninZone","zones","some","zone","transformPixelLengthIntoNumberOfCells","pixelLength","isCoordinateInImage","dWidthLogo","dHeightLogo","dxLogo","dyLogo","logoImage","numberOfCellsMargin","firstRowOfLogo","firstColumnOfLogo","logoWidthInCells","logoHeightInCells","shouldComponentUpdate","nextProps","componentDidMount","update","componentDidUpdate","_a","_b","ecLevel","enableCORS","bgColor","fgColor","logoOpacity","logoOnLoad","removeQrCodeBehindLogo","qrStyle","eyeRadius","eyeColor","logoPaddingStyle","quietZone","logoWidth","logoHeight","logoPadding","qrCode","addData","make","canvas","getContext","canvasSize","getModuleCount","scale","window","devicePixelRatio","height","width","fillRect","positioningZones","radius","isDark","arc","round","PI","roundedCorners","w","floor","h","_c","image_1","Image","crossOrigin","onload","e","save","dWidthLogoPadding","dHeightLogoPadding","dxLogoPadding","dyLogoPadding","dxCenterLogoPadding","dyCenterLogoPadding","ellipse","globalAlpha","drawImage","restore","src","render","qrSize","id","style","ref","defaultProps","Component"],"sources":["C:/projects/AssetManagmentSystemVella/assetmanagment/node_modules/react-qrcode-logo/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QRCode = void 0;\nvar isEqual = require(\"lodash.isequal\");\nvar qrGenerator = require(\"qrcode-generator\");\nvar React = require(\"react\");\nvar QRCode = /** @class */ (function (_super) {\n    __extends(QRCode, _super);\n    function QRCode(props) {\n        var _this = _super.call(this, props) || this;\n        _this.canvasRef = React.createRef();\n        return _this;\n    }\n    QRCode.prototype.download = function (fileType, fileName) {\n        if (this.canvasRef.current) {\n            var mimeType = void 0;\n            switch (fileType) {\n                case 'jpg':\n                    mimeType = 'image/jpeg';\n                    break;\n                case 'webp':\n                    mimeType = 'image/webp';\n                    break;\n                case 'png':\n                default:\n                    mimeType = 'image/png';\n                    break;\n            }\n            var url = this.canvasRef.current.toDataURL(mimeType, 1.0);\n            var link = document.createElement('a');\n            link.download = fileName !== null && fileName !== void 0 ? fileName : 'react-qrcode-logo';\n            link.href = url;\n            link.click();\n        }\n    };\n    QRCode.prototype.utf16to8 = function (str) {\n        var out = '', i, c;\n        var len = str.length;\n        for (i = 0; i < len; i++) {\n            c = str.charCodeAt(i);\n            if ((c >= 0x0001) && (c <= 0x007F)) {\n                out += str.charAt(i);\n            }\n            else if (c > 0x07FF) {\n                out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n                out += String.fromCharCode(0x80 | ((c >> 6) & 0x3F));\n                out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));\n            }\n            else {\n                out += String.fromCharCode(0xC0 | ((c >> 6) & 0x1F));\n                out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));\n            }\n        }\n        return out;\n    };\n    /**\n     * Draw a rounded square in the canvas\n     */\n    QRCode.prototype.drawRoundedSquare = function (lineWidth, x, y, size, color, radii, fill, ctx) {\n        ctx.lineWidth = lineWidth;\n        ctx.fillStyle = color;\n        ctx.strokeStyle = color;\n        // Adjust coordinates so that the outside of the stroke is aligned to the edges\n        y += lineWidth / 2;\n        x += lineWidth / 2;\n        size -= lineWidth;\n        if (!Array.isArray(radii)) {\n            radii = [radii, radii, radii, radii];\n        }\n        // Radius should not be greater than half the size or less than zero\n        radii = radii.map(function (r) {\n            r = Math.min(r, size / 2);\n            return (r < 0) ? 0 : r;\n        });\n        var rTopLeft = radii[0] || 0;\n        var rTopRight = radii[1] || 0;\n        var rBottomRight = radii[2] || 0;\n        var rBottomLeft = radii[3] || 0;\n        ctx.beginPath();\n        ctx.moveTo(x + rTopLeft, y);\n        ctx.lineTo(x + size - rTopRight, y);\n        if (rTopRight)\n            ctx.quadraticCurveTo(x + size, y, x + size, y + rTopRight);\n        ctx.lineTo(x + size, y + size - rBottomRight);\n        if (rBottomRight)\n            ctx.quadraticCurveTo(x + size, y + size, x + size - rBottomRight, y + size);\n        ctx.lineTo(x + rBottomLeft, y + size);\n        if (rBottomLeft)\n            ctx.quadraticCurveTo(x, y + size, x, y + size - rBottomLeft);\n        ctx.lineTo(x, y + rTopLeft);\n        if (rTopLeft)\n            ctx.quadraticCurveTo(x, y, x + rTopLeft, y);\n        ctx.closePath();\n        ctx.stroke();\n        if (fill) {\n            ctx.fill();\n        }\n    };\n    /**\n     * Draw a single positional pattern eye.\n     */\n    QRCode.prototype.drawPositioningPattern = function (ctx, cellSize, offset, row, col, color, radii) {\n        if (radii === void 0) { radii = [0, 0, 0, 0]; }\n        var lineWidth = Math.ceil(cellSize);\n        var radiiOuter;\n        var radiiInner;\n        if (typeof radii !== 'number' && !Array.isArray(radii)) {\n            radiiOuter = radii.outer || 0;\n            radiiInner = radii.inner || 0;\n        }\n        else {\n            radiiOuter = radii;\n            radiiInner = radiiOuter;\n        }\n        var colorOuter;\n        var colorInner;\n        if (typeof color !== 'string') {\n            colorOuter = color.outer;\n            colorInner = color.inner;\n        }\n        else {\n            colorOuter = color;\n            colorInner = color;\n        }\n        var y = (row * cellSize) + offset;\n        var x = (col * cellSize) + offset;\n        var size = cellSize * 7;\n        // Outer box\n        this.drawRoundedSquare(lineWidth, x, y, size, colorOuter, radiiOuter, false, ctx);\n        // Inner box\n        size = cellSize * 3;\n        y += cellSize * 2;\n        x += cellSize * 2;\n        this.drawRoundedSquare(lineWidth, x, y, size, colorInner, radiiInner, true, ctx);\n    };\n    ;\n    /**\n     * Is this dot inside a positional pattern zone.\n     */\n    QRCode.prototype.isInPositioninZone = function (col, row, zones) {\n        return zones.some(function (zone) { return (row >= zone.row && row <= zone.row + 7 &&\n            col >= zone.col && col <= zone.col + 7); });\n    };\n    QRCode.prototype.transformPixelLengthIntoNumberOfCells = function (pixelLength, cellSize) {\n        return pixelLength / cellSize;\n    };\n    QRCode.prototype.isCoordinateInImage = function (col, row, dWidthLogo, dHeightLogo, dxLogo, dyLogo, cellSize, logoImage) {\n        if (logoImage) {\n            var numberOfCellsMargin = 2;\n            var firstRowOfLogo = this.transformPixelLengthIntoNumberOfCells(dxLogo, cellSize);\n            var firstColumnOfLogo = this.transformPixelLengthIntoNumberOfCells(dyLogo, cellSize);\n            var logoWidthInCells = this.transformPixelLengthIntoNumberOfCells(dWidthLogo, cellSize) - 1;\n            var logoHeightInCells = this.transformPixelLengthIntoNumberOfCells(dHeightLogo, cellSize) - 1;\n            return row >= firstRowOfLogo - numberOfCellsMargin && row <= firstRowOfLogo + logoWidthInCells + numberOfCellsMargin // check rows\n                && col >= firstColumnOfLogo - numberOfCellsMargin && col <= firstColumnOfLogo + logoHeightInCells + numberOfCellsMargin; // check cols\n        }\n        else {\n            return false;\n        }\n    };\n    QRCode.prototype.shouldComponentUpdate = function (nextProps) {\n        return !isEqual(this.props, nextProps);\n    };\n    QRCode.prototype.componentDidMount = function () {\n        this.update();\n    };\n    QRCode.prototype.componentDidUpdate = function () {\n        this.update();\n    };\n    QRCode.prototype.update = function () {\n        var _a;\n        var _b = this.props, value = _b.value, ecLevel = _b.ecLevel, enableCORS = _b.enableCORS, bgColor = _b.bgColor, fgColor = _b.fgColor, logoImage = _b.logoImage, logoOpacity = _b.logoOpacity, logoOnLoad = _b.logoOnLoad, removeQrCodeBehindLogo = _b.removeQrCodeBehindLogo, qrStyle = _b.qrStyle, eyeRadius = _b.eyeRadius, eyeColor = _b.eyeColor, logoPaddingStyle = _b.logoPaddingStyle;\n        // just make sure that these params are passed as numbers\n        var size = +this.props.size;\n        var quietZone = +this.props.quietZone;\n        var logoWidth = this.props.logoWidth ? +this.props.logoWidth : 0;\n        var logoHeight = this.props.logoHeight ? +this.props.logoHeight : 0;\n        var logoPadding = this.props.logoPadding ? +this.props.logoPadding : 0;\n        var qrCode = qrGenerator(0, ecLevel);\n        qrCode.addData(this.utf16to8(value));\n        qrCode.make();\n        var canvas = (_a = this.canvasRef) === null || _a === void 0 ? void 0 : _a.current;\n        var ctx = canvas.getContext('2d');\n        var canvasSize = size + (2 * quietZone);\n        var length = qrCode.getModuleCount();\n        var cellSize = size / length;\n        var scale = (window.devicePixelRatio || 1);\n        canvas.height = canvas.width = canvasSize * scale;\n        ctx.scale(scale, scale);\n        ctx.fillStyle = bgColor;\n        ctx.fillRect(0, 0, canvasSize, canvasSize);\n        var offset = quietZone;\n        var positioningZones = [\n            { row: 0, col: 0 },\n            { row: 0, col: length - 7 },\n            { row: length - 7, col: 0 },\n        ];\n        ctx.strokeStyle = fgColor;\n        if (qrStyle === 'dots') {\n            ctx.fillStyle = fgColor;\n            var radius = cellSize / 2;\n            for (var row = 0; row < length; row++) {\n                for (var col = 0; col < length; col++) {\n                    if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones)) {\n                        ctx.beginPath();\n                        ctx.arc(Math.round(col * cellSize) + radius + offset, Math.round(row * cellSize) + radius + offset, (radius / 100) * 75, 0, 2 * Math.PI, false);\n                        ctx.closePath();\n                        ctx.fill();\n                    }\n                }\n            }\n        }\n        else if (qrStyle === 'fluid') {\n            var radius = Math.ceil(cellSize / 2);\n            for (var row = 0; row < length; row++) {\n                for (var col = 0; col < length; col++) {\n                    if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones)) {\n                        var roundedCorners = [false, false, false, false]; // top-left, top-right, bottom-right, bottom-left\n                        if ((row > 0 && !qrCode.isDark(row - 1, col)) && (col > 0 && !qrCode.isDark(row, col - 1)))\n                            roundedCorners[0] = true;\n                        if ((row > 0 && !qrCode.isDark(row - 1, col)) && (col < length - 1 && !qrCode.isDark(row, col + 1)))\n                            roundedCorners[1] = true;\n                        if ((row < length - 1 && !qrCode.isDark(row + 1, col)) && (col < length - 1 && !qrCode.isDark(row, col + 1)))\n                            roundedCorners[2] = true;\n                        if ((row < length - 1 && !qrCode.isDark(row + 1, col)) && (col > 0 && !qrCode.isDark(row, col - 1)))\n                            roundedCorners[3] = true;\n                        var w = (Math.ceil((col + 1) * cellSize) - Math.floor(col * cellSize));\n                        var h = (Math.ceil((row + 1) * cellSize) - Math.floor(row * cellSize));\n                        ctx.fillStyle = fgColor;\n                        ctx.beginPath();\n                        ctx.arc(Math.round(col * cellSize) + radius + offset, Math.round(row * cellSize) + radius + offset, radius, 0, 2 * Math.PI, false);\n                        ctx.closePath();\n                        ctx.fill();\n                        if (!roundedCorners[0])\n                            ctx.fillRect(Math.round(col * cellSize) + offset, Math.round(row * cellSize) + offset, w / 2, h / 2);\n                        if (!roundedCorners[1])\n                            ctx.fillRect(Math.round(col * cellSize) + offset + Math.floor(w / 2), Math.round(row * cellSize) + offset, w / 2, h / 2);\n                        if (!roundedCorners[2])\n                            ctx.fillRect(Math.round(col * cellSize) + offset + Math.floor(w / 2), Math.round(row * cellSize) + offset + Math.floor(h / 2), w / 2, h / 2);\n                        if (!roundedCorners[3])\n                            ctx.fillRect(Math.round(col * cellSize) + offset, Math.round(row * cellSize) + offset + Math.floor(h / 2), w / 2, h / 2);\n                    }\n                }\n            }\n        }\n        else {\n            for (var row = 0; row < length; row++) {\n                for (var col = 0; col < length; col++) {\n                    if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones)) {\n                        ctx.fillStyle = fgColor;\n                        var w = (Math.ceil((col + 1) * cellSize) - Math.floor(col * cellSize));\n                        var h = (Math.ceil((row + 1) * cellSize) - Math.floor(row * cellSize));\n                        ctx.fillRect(Math.round(col * cellSize) + offset, Math.round(row * cellSize) + offset, w, h);\n                    }\n                }\n            }\n        }\n        // Draw positioning patterns\n        for (var i = 0; i < 3; i++) {\n            var _c = positioningZones[i], row = _c.row, col = _c.col;\n            var radii = eyeRadius;\n            var color = void 0;\n            if (Array.isArray(radii)) {\n                radii = radii[i];\n            }\n            if (typeof radii == 'number') {\n                radii = [radii, radii, radii, radii];\n            }\n            if (!eyeColor) { // if not specified, eye color is the same as foreground, \n                color = fgColor;\n            }\n            else {\n                if (Array.isArray(eyeColor)) { // if array, we pass the single color\n                    color = eyeColor[i];\n                }\n                else {\n                    color = eyeColor;\n                }\n            }\n            this.drawPositioningPattern(ctx, cellSize, offset, row, col, color, radii);\n        }\n        if (logoImage) {\n            var image_1 = new Image();\n            if (enableCORS) {\n                image_1.crossOrigin = 'Anonymous';\n            }\n            image_1.onload = function (e) {\n                ctx.save();\n                var dWidthLogo = logoWidth || size * 0.2;\n                var dHeightLogo = logoHeight || dWidthLogo;\n                var dxLogo = ((size - dWidthLogo) / 2);\n                var dyLogo = ((size - dHeightLogo) / 2);\n                if (removeQrCodeBehindLogo || logoPadding) {\n                    ctx.beginPath();\n                    ctx.strokeStyle = bgColor;\n                    ctx.fillStyle = bgColor;\n                    var dWidthLogoPadding = dWidthLogo + (2 * logoPadding);\n                    var dHeightLogoPadding = dHeightLogo + (2 * logoPadding);\n                    var dxLogoPadding = dxLogo + offset - logoPadding;\n                    var dyLogoPadding = dyLogo + offset - logoPadding;\n                    if (logoPaddingStyle === 'circle') {\n                        var dxCenterLogoPadding = dxLogoPadding + (dWidthLogoPadding / 2);\n                        var dyCenterLogoPadding = dyLogoPadding + (dHeightLogoPadding / 2);\n                        ctx.ellipse(dxCenterLogoPadding, dyCenterLogoPadding, dWidthLogoPadding / 2, dHeightLogoPadding / 2, 0, 0, 2 * Math.PI);\n                        ctx.stroke();\n                        ctx.fill();\n                    }\n                    else {\n                        ctx.fillRect(dxLogoPadding, dyLogoPadding, dWidthLogoPadding, dHeightLogoPadding);\n                    }\n                }\n                ctx.globalAlpha = logoOpacity;\n                ctx.drawImage(image_1, dxLogo + offset, dyLogo + offset, dWidthLogo, dHeightLogo);\n                ctx.restore();\n                if (logoOnLoad) {\n                    logoOnLoad(e);\n                }\n            };\n            image_1.src = logoImage;\n        }\n    };\n    QRCode.prototype.render = function () {\n        var _a;\n        var qrSize = +this.props.size + (2 * +this.props.quietZone);\n        return React.createElement(\"canvas\", { id: (_a = this.props.id) !== null && _a !== void 0 ? _a : 'react-qrcode-logo', height: qrSize, width: qrSize, style: __assign({ height: qrSize + 'px', width: qrSize + 'px' }, this.props.style), ref: this.canvasRef });\n    };\n    QRCode.defaultProps = {\n        value: 'https://reactjs.org/',\n        ecLevel: 'M',\n        enableCORS: false,\n        size: 150,\n        quietZone: 10,\n        bgColor: '#FFFFFF',\n        fgColor: '#000000',\n        logoOpacity: 1,\n        qrStyle: 'squares',\n        eyeRadius: [0, 0, 0],\n        logoPaddingStyle: 'square'\n    };\n    return QRCode;\n}(React.Component));\nexports.QRCode = QRCode;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}