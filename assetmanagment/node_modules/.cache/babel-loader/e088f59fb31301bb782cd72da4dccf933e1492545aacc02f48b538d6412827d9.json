{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\AssetManagmentSystem\\\\assetmanagment\\\\src\\\\components\\\\Admin\\\\AssetCategorization\\\\Assetcategorization.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./assetCategorization.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Categorization = () => {\n  _s();\n  const [category, setCategory] = useState(\"\"); // State for selected category\n\n  const [types, setTypes] = useState(\"\"); // State for selected type\n  const [customType, setCustomType] = useState(\"\"); // Custom type input\n\n  const categories = [\"Electronic items\", \"Laundry & Linen\", \"Housekeeping Supplies\", \"Electrical items\", \"Security & Safety\", \"Furniture\", \"Outdoor & Garden Equipment\", \"Stationery\"];\n\n  // Define types based on the selected category\n  const getTypesByCategory = category => {\n    switch (category) {\n      case \"Electronic items\":\n        return [\"Computer\", \"Laptop\", \"Mobile Phone\", \"UPS\", \"Other\"];\n      case \"Furniture\":\n        return [\"Table\", \"Chair\", \"Sofa\", \"Cupboard\", \"Other\"];\n      case \"Stationery\":\n        return [\"Pen\", \"Notebook\", \"Marker\", \"Stapler\", \"Other\"];\n      case \"Laundry & Linen\":\n        return [\"Pen\", \"Notebook\", \"Marker\", \"Stapler\", \"Other\"];\n      case \"Electrical items\":\n        return [\"Pen\", \"Notebook\", \"Marker\", \"Stapler\", \"Other\"];\n      case \"Outdoor & Garden Equipment\":\n        return [\"Pen\", \"Notebook\", \"Marker\", \"Stapler\", \"Other\"];\n      case \"Security & Safety\":\n        return [\"Pen\", \"Notebook\", \"Marker\", \"Stapler\", \"Other\"];\n      default:\n        return [];\n    }\n  };\n  const typesList = getTypesByCategory(category);\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Construct payload\n    const payload = {\n      category,\n      types: types === \"Other\" ? customType : types,\n      customType: customType || \"\"\n    };\n    try {\n      const response = await axios.post(\"http://localhost:8000/api/categories\", payload);\n      alert(response.data.message); // Success message\n      // Reset form\n      setCategory(\"\");\n      setTypes(\"\");\n      setCustomType(\"\");\n    } catch (error) {\n      console.error(\"Error submitting data:\", error);\n      alert(\"Error creating category. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"asset-categorization\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Asset Categorization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: category,\n              onChange: e => {\n                setCategory(e.target.value); // Update category\n                setTypes(\"\"); // Reset types when category changes\n\n                setCustomType(\"\"); // Reset custom type\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: cat,\n                children: cat\n              }, cat, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), category && /*#__PURE__*/_jsxDEV(\"select\", {\n              value: types,\n              onChange: e => {\n                setTypes(e.target.value);\n                setCustomType(\"\"); // Reset custom type when type changes\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this), typesList.map(typ => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: typ,\n                children: typ\n              }, typ, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), types === \"Other\" && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: customType,\n              onChange: e => setCustomType(e.target.value),\n              placeholder: \"Enter Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"create-category-btn\",\n            children: \"Create Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Categorization, \"eZm/gIwR7RMGTzI4fULeOGa49DA=\");\n_c = Categorization;\nexport default Categorization;\nvar _c;\n$RefreshReg$(_c, \"Categorization\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Categorization","_s","category","setCategory","types","setTypes","customType","setCustomType","categories","getTypesByCategory","typesList","handleSubmit","e","preventDefault","payload","response","post","alert","data","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","map","cat","typ","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/AssetManagmentSystem/assetmanagment/src/components/Admin/AssetCategorization/Assetcategorization.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./assetCategorization.css\";\r\nimport axios from \"axios\";\r\n\r\nconst Categorization = () => {\r\n  const [category, setCategory] = useState(\"\"); // State for selected category\r\n\r\n  const [types, setTypes] = useState(\"\"); // State for selected type\r\n  const [customType, setCustomType] = useState(\"\"); // Custom type input\r\n\r\n\r\n  const categories = [\"Electronic items\",\r\n    \"Laundry & Linen\",\r\n    \"Housekeeping Supplies\",\r\n    \"Electrical items\",\r\n    \"Security & Safety\",\r\n    \"Furniture\",\r\n    \"Outdoor & Garden Equipment\",\r\n    \"Stationery\"];\r\n\r\n  // Define types based on the selected category\r\n  const getTypesByCategory = (category) => {\r\n    switch (category) {\r\n      case \"Electronic items\":\r\n        return [\"Computer\", \"Laptop\", \"Mobile Phone\", \"UPS\", \"Other\"];\r\n      case \"Furniture\":\r\n        return [\"Table\", \"Chair\", \"Sofa\", \"Cupboard\", \"Other\"];\r\n      case \"Stationery\":\r\n        return [\"Pen\", \"Notebook\", \"Marker\", \"Stapler\", \"Other\"];\r\n        case \"Laundry & Linen\":\r\n          return [\"Pen\", \"Notebook\", \"Marker\", \"Stapler\", \"Other\"];\r\n          case \"Electrical items\":\r\n            return [\"Pen\", \"Notebook\", \"Marker\", \"Stapler\", \"Other\"];\r\n            case \"Outdoor & Garden Equipment\":\r\n              return [\"Pen\", \"Notebook\", \"Marker\", \"Stapler\", \"Other\"];\r\n              case \"Security & Safety\":\r\n                return [\"Pen\", \"Notebook\", \"Marker\", \"Stapler\", \"Other\"];\r\n      default:\r\n        return [];\r\n    }\r\n  };\r\n\r\n  const typesList = getTypesByCategory(category);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Construct payload\r\n    const payload = {\r\n      category,\r\n\r\n      types: types === \"Other\" ? customType : types,\r\n      customType: customType || \"\",\r\n\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8000/api/categories\", payload);\r\n      alert(response.data.message); // Success message\r\n      // Reset form\r\n      setCategory(\"\");\r\n\r\n      setTypes(\"\");\r\n      setCustomType(\"\");\r\n\r\n    } catch (error) {\r\n      console.error(\"Error submitting data:\", error);\r\n      alert(\"Error creating category. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <div className=\"asset-categorization\">\r\n        <div className=\"form-container\">\r\n          <h2>Asset Categorization</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"input-box\">\r\n              {/* Category Dropdown */}\r\n              <select\r\n                value={category}\r\n                onChange={(e) => {\r\n                  setCategory(e.target.value); // Update category\r\n                  setTypes(\"\"); // Reset types when category changes\r\n\r\n\r\n                  setCustomType(\"\"); // Reset custom type\r\n                }}\r\n              >\r\n                <option value=\"\">Select Category</option>\r\n                {categories.map((cat) => (\r\n                  <option key={cat} value={cat}>\r\n                    {cat}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n\r\n              {/* Input for custom category */}\r\n\r\n\r\n              {/* Type Input or Dropdown */}\r\n              {category && (\r\n                <select\r\n                  value={types}\r\n                  onChange={(e) => {\r\n                    setTypes(e.target.value);\r\n                    setCustomType(\"\"); // Reset custom type when type changes\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select Type</option>\r\n                  {typesList.map((typ) => (\r\n                    <option key={typ} value={typ}>\r\n                      {typ}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              )}\r\n\r\n\r\n\r\n              {/* Input for custom type if \"Other\" is selected in the dropdown */}\r\n              {types === \"Other\" && (\r\n                <input\r\n                  type=\"text\"\r\n                  value={customType}\r\n                  onChange={(e) => setCustomType(e.target.value)}\r\n                  placeholder=\"Enter Type\"\r\n                />\r\n              )}\r\n\r\n\r\n            </div>\r\n\r\n            {/* Create Category Button */}\r\n            <button type=\"submit\" className=\"create-category-btn\">\r\n              Create Category\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categorization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}