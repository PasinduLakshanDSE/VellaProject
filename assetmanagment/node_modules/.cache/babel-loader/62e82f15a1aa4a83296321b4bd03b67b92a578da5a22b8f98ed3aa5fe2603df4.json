{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\AssetManagmentSystem\\\\assetmanagment\\\\src\\\\components\\\\Admin\\\\AssetRegistration\\\\AssetRegister.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { QRCode } from \"react-qrcode-logo\";\nimport html2canvas from \"html2canvas\";\nimport axios from \"axios\";\nimport \"./assetRegister.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssetRegister = () => {\n  _s();\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\n  const [name, setName] = useState((user === null || user === void 0 ? void 0 : user.username) || \"\");\n  const [company, setCompany] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n  const [mainCategory, setMainCategory] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [furnitureItems, setFurnitureItems] = useState([]);\n  const [assetName, setAssetName] = useState(\"\");\n  const [assetUpdateDate, setAssetUpdateDate] = useState(\"\");\n  const [serialNumber, setSerialNumber] = useState(\"\");\n  const [qrCodeData, setQrCodeData] = useState(null);\n  const [trackingId, setTrackingId] = useState(\"\");\n  const qrCodeContainerRef = useRef();\n  const mainCategories = [\"Electrical items\", \"Electronic items\", \"Laundry & Linen\", \"Housekeeping Supplies\", \"Security & Safety\", \"Furniture\", \"Outdoor & Garden Equipment\"];\n  const companies = [\"Vella\", \"98 Acers\", \"Ravana Pool Club\", \"Flying Ravana\", \"Le Maas Tota\", \"Tea Factory\"];\n  const departments = [\"IT\", \"HR\", \"Kitchen\", \"Front Office\"];\n  const companyAbbreviations = {\n    Vella: \"V\",\n    \"98 Acers\": \"98\",\n    \"Ravana Pool Club\": \"RPC\",\n    \"Flying Ravana\": \"FR\",\n    \"Le Maas Tota\": \"LMT\",\n    \"Tea Factory\": \"TF\"\n  };\n  const departmentAbbreviations = {\n    IT: \"IT\",\n    HR: \"HR\",\n    Kitchen: \"KT\",\n    \"Front Office\": \"FO\"\n  };\n  useEffect(() => {\n    fetchCategory();\n  }, []);\n  const fetchCategory = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/api/categories/getCategory\");\n      setCategories(response.data);\n    } catch (error) {\n      console.error(\"Error fetching categories:\", error);\n    }\n  };\n  const generateTrackingId = () => {\n    const companyAbbr = companyAbbreviations[company] || company;\n    const departmentAbbr = departmentAbbreviations[department] || department;\n    const randomNum = String(Math.floor(Math.random() * 100000)).padStart(5, \"0\");\n    if (serialNumber) {\n      const serialSuffix = serialNumber.slice(-4).padStart(4, \"0\");\n      return `${companyAbbr}-${departmentAbbr}-${serialSuffix}`;\n    }\n    return `${companyAbbr}-${departmentAbbr}-${randomNum}`;\n  };\n  const handleSubmit = () => {\n    if (!name || !company || !department || !mainCategory || !assetName || !assetUpdateDate || !type) {\n      alert(\"Please fill in all fields before submitting.\");\n      return;\n    }\n    if (mainCategory === \"Electronic items\" && !serialNumber) {\n      alert(\"Please enter a Serial Number for Electronic items.\");\n      return;\n    }\n    if (!trackingId || !qrCodeData) {\n      alert(\"Please generate a Tracking ID and QR Code before submitting.\");\n      return;\n    }\n    const assetData = {\n      name,\n      company,\n      department,\n      mainCategory,\n      type,\n      assetName,\n      assetUpdateDate,\n      serialNumber: mainCategory === \"Electronic items\" ? serialNumber : null,\n      trackingId\n    };\n    console.log(\"Asset Data: \", assetData);\n    alert(\"Asset Registered Successfully!\");\n    setCompany(\"\");\n    setDepartment(\"\");\n    setMainCategory(\"\");\n    setType(\"\");\n    setAssetName(\"\");\n    setAssetUpdateDate(\"\");\n    setSerialNumber(\"\");\n    setQrCodeData(null);\n    setTrackingId(\"\");\n  };\n  const handleGenerateQR = () => {\n    if (!name || !company || !department || !mainCategory || !assetName || !assetUpdateDate || !type) {\n      alert(\"Please fill in all fields before generating the QR code.\");\n      return;\n    }\n    if (mainCategory === \"Electronic items\" && !serialNumber) {\n      alert(\"Please enter a Serial Number for Electronic items.\");\n      return;\n    }\n    const uniqueTrackingId = trackingId || generateTrackingId();\n    setTrackingId(uniqueTrackingId);\n    const qrData = JSON.stringify({\n      name,\n      company,\n      department,\n      mainCategory,\n      assetName,\n      type,\n      assetUpdateDate,\n      serialNumber: mainCategory === \"Electronic items\" ? serialNumber : null,\n      trackingId: uniqueTrackingId\n    });\n    setQrCodeData(qrData);\n  };\n  const handleDownloadCombinedImage = async () => {\n    try {\n      if (!qrCodeContainerRef.current) return;\n      const canvas = await html2canvas(qrCodeContainerRef.current);\n      const link = document.createElement(\"a\");\n      link.download = \"QRCodeWithTrackingID.png\";\n      link.href = canvas.toDataURL(\"image/png\");\n      link.click();\n    } catch (error) {\n      console.error(\"Failed to download the QR code image:\", error);\n      alert(\"Error occurred while downloading the QR code. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"asset-register\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Asset Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: company,\n          onChange: e => setCompany(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), companies.map(com => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: com,\n            children: com\n          }, com, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: department,\n          onChange: e => setDepartment(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), departments.map(dep => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: dep,\n            children: dep\n          }, dep, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: mainCategory,\n          onChange: e => setMainCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), mainCategories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat,\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerateQR,\n          children: \"Generate QR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), qrCodeData && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: qrCodeContainerRef,\n        children: [/*#__PURE__*/_jsxDEV(QRCode, {\n          value: qrCodeData,\n          size: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID: \", trackingId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDownloadCombinedImage,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(AssetRegister, \"QfSXcuPTuLvdaSq0QJA5B2vbBoE=\");\n_c = AssetRegister;\nexport default AssetRegister;\nvar _c;\n$RefreshReg$(_c, \"AssetRegister\");","map":{"version":3,"names":["React","useState","useRef","useEffect","QRCode","html2canvas","axios","jsxDEV","_jsxDEV","AssetRegister","_s","user","JSON","parse","localStorage","getItem","name","setName","username","company","setCompany","department","setDepartment","mainCategory","setMainCategory","type","setType","categories","setCategories","types","setTypes","furnitureItems","setFurnitureItems","assetName","setAssetName","assetUpdateDate","setAssetUpdateDate","serialNumber","setSerialNumber","qrCodeData","setQrCodeData","trackingId","setTrackingId","qrCodeContainerRef","mainCategories","companies","departments","companyAbbreviations","Vella","departmentAbbreviations","IT","HR","Kitchen","fetchCategory","response","get","data","error","console","generateTrackingId","companyAbbr","departmentAbbr","randomNum","String","Math","floor","random","padStart","serialSuffix","slice","handleSubmit","alert","assetData","log","handleGenerateQR","uniqueTrackingId","qrData","stringify","handleDownloadCombinedImage","current","canvas","link","document","createElement","download","href","toDataURL","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","readOnly","onChange","e","target","map","com","dep","cat","onClick","ref","size","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/AssetManagmentSystem/assetmanagment/src/components/Admin/AssetRegistration/AssetRegister.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { QRCode } from \"react-qrcode-logo\";\r\nimport html2canvas from \"html2canvas\";\r\nimport axios from \"axios\";\r\nimport \"./assetRegister.css\";\r\n\r\nconst AssetRegister = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const [name, setName] = useState(user?.username || \"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [mainCategory, setMainCategory] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [types, setTypes] = useState([]);\r\n  const [furnitureItems, setFurnitureItems] = useState([]);\r\n  const [assetName, setAssetName] = useState(\"\");\r\n  const [assetUpdateDate, setAssetUpdateDate] = useState(\"\");\r\n  const [serialNumber, setSerialNumber] = useState(\"\");\r\n  const [qrCodeData, setQrCodeData] = useState(null);\r\n  const [trackingId, setTrackingId] = useState(\"\");\r\n\r\n  const qrCodeContainerRef = useRef();\r\n\r\n  const mainCategories = [\r\n    \"Electrical items\",\r\n    \"Electronic items\",\r\n    \"Laundry & Linen\",\r\n    \"Housekeeping Supplies\",\r\n    \"Security & Safety\",\r\n    \"Furniture\",\r\n    \"Outdoor & Garden Equipment\",\r\n  ];\r\n\r\n  const companies = [\r\n    \"Vella\",\r\n    \"98 Acers\",\r\n    \"Ravana Pool Club\",\r\n    \"Flying Ravana\",\r\n    \"Le Maas Tota\",\r\n    \"Tea Factory\",\r\n  ];\r\n\r\n  const departments = [\"IT\", \"HR\", \"Kitchen\", \"Front Office\"];\r\n\r\n  const companyAbbreviations = {\r\n    Vella: \"V\",\r\n    \"98 Acers\": \"98\",\r\n    \"Ravana Pool Club\": \"RPC\",\r\n    \"Flying Ravana\": \"FR\",\r\n    \"Le Maas Tota\": \"LMT\",\r\n    \"Tea Factory\": \"TF\",\r\n  };\r\n\r\n  const departmentAbbreviations = {\r\n    IT: \"IT\",\r\n    HR: \"HR\",\r\n    Kitchen: \"KT\",\r\n    \"Front Office\": \"FO\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCategory();\r\n  }, []);\r\n\r\n  const fetchCategory = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:8000/api/categories/getCategory\"\r\n      );\r\n      setCategories(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching categories:\", error);\r\n    }\r\n  };\r\n\r\n  const generateTrackingId = () => {\r\n    const companyAbbr = companyAbbreviations[company] || company;\r\n    const departmentAbbr = departmentAbbreviations[department] || department;\r\n    const randomNum = String(Math.floor(Math.random() * 100000)).padStart(5, \"0\");\r\n\r\n    if (serialNumber) {\r\n      const serialSuffix = serialNumber.slice(-4).padStart(4, \"0\");\r\n      return `${companyAbbr}-${departmentAbbr}-${serialSuffix}`;\r\n    }\r\n\r\n    return `${companyAbbr}-${departmentAbbr}-${randomNum}`;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!name || !company || !department || !mainCategory || !assetName || !assetUpdateDate || !type) {\r\n      alert(\"Please fill in all fields before submitting.\");\r\n      return;\r\n    }\r\n\r\n    if (mainCategory === \"Electronic items\" && !serialNumber) {\r\n      alert(\"Please enter a Serial Number for Electronic items.\");\r\n      return;\r\n    }\r\n\r\n    if (!trackingId || !qrCodeData) {\r\n      alert(\"Please generate a Tracking ID and QR Code before submitting.\");\r\n      return;\r\n    }\r\n\r\n    const assetData = {\r\n      name,\r\n      company,\r\n      department,\r\n      mainCategory,\r\n      type,\r\n      assetName,\r\n      assetUpdateDate,\r\n      serialNumber: mainCategory === \"Electronic items\" ? serialNumber : null,\r\n      trackingId,\r\n    };\r\n\r\n    console.log(\"Asset Data: \", assetData);\r\n    alert(\"Asset Registered Successfully!\");\r\n\r\n    setCompany(\"\");\r\n    setDepartment(\"\");\r\n    setMainCategory(\"\");\r\n    setType(\"\");\r\n    setAssetName(\"\");\r\n    setAssetUpdateDate(\"\");\r\n    setSerialNumber(\"\");\r\n    setQrCodeData(null);\r\n    setTrackingId(\"\");\r\n  };\r\n\r\n  const handleGenerateQR = () => {\r\n    if (!name || !company || !department || !mainCategory || !assetName || !assetUpdateDate || !type) {\r\n      alert(\"Please fill in all fields before generating the QR code.\");\r\n      return;\r\n    }\r\n\r\n    if (mainCategory === \"Electronic items\" && !serialNumber) {\r\n      alert(\"Please enter a Serial Number for Electronic items.\");\r\n      return;\r\n    }\r\n\r\n    const uniqueTrackingId = trackingId || generateTrackingId();\r\n    setTrackingId(uniqueTrackingId);\r\n\r\n    const qrData = JSON.stringify({\r\n      name,\r\n      company,\r\n      department,\r\n      mainCategory,\r\n      assetName,\r\n      type,\r\n      assetUpdateDate,\r\n      serialNumber: mainCategory === \"Electronic items\" ? serialNumber : null,\r\n      trackingId: uniqueTrackingId,\r\n    });\r\n\r\n    setQrCodeData(qrData);\r\n  };\r\n\r\n  const handleDownloadCombinedImage = async () => {\r\n    try {\r\n      if (!qrCodeContainerRef.current) return;\r\n\r\n      const canvas = await html2canvas(qrCodeContainerRef.current);\r\n      const link = document.createElement(\"a\");\r\n      link.download = \"QRCodeWithTrackingID.png\";\r\n      link.href = canvas.toDataURL(\"image/png\");\r\n      link.click();\r\n    } catch (error) {\r\n      console.error(\"Failed to download the QR code image:\", error);\r\n      alert(\"Error occurred while downloading the QR code. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"asset-register\">\r\n      <div className=\"form-container\">\r\n        <h2>Asset Registration</h2>\r\n        <div className=\"input-box\">\r\n          <input type=\"text\" value={name} readOnly />\r\n          <select value={company} onChange={(e) => setCompany(e.target.value)}>\r\n            <option value=\"\">Select Company</option>\r\n            {companies.map((com) => (\r\n              <option key={com} value={com}>{com}</option>\r\n            ))}\r\n          </select>\r\n          <select value={department} onChange={(e) => setDepartment(e.target.value)}>\r\n            <option value=\"\">Select Department</option>\r\n            {departments.map((dep) => (\r\n              <option key={dep} value={dep}>{dep}</option>\r\n            ))}\r\n          </select>\r\n          <select value={mainCategory} onChange={(e) => setMainCategory(e.target.value)}>\r\n            <option value=\"\">Select Category</option>\r\n            {mainCategories.map((cat) => (\r\n              <option key={cat} value={cat}>{cat}</option>\r\n            ))}\r\n          </select>\r\n          <button onClick={handleSubmit}>Submit</button>\r\n          <button onClick={handleGenerateQR}>Generate QR</button>\r\n        </div>\r\n\r\n        {qrCodeData && (\r\n          <div ref={qrCodeContainerRef}>\r\n            <QRCode value={qrCodeData} size={150} />\r\n            <p>ID: {trackingId}</p>\r\n            <button onClick={handleDownloadCombinedImage}>Download</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssetRegister;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}